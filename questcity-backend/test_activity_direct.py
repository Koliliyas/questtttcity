import asyncio
from sqlalchemy import create_engine, text, inspect
from sqlalchemy.orm import sessionmaker

def test_activity_table():
    print("üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ç–∞–±–ª–∏—Ü—É activity –Ω–∞–ø—Ä—è–º—É—é...")
    try:
        # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ
        engine = create_engine('postgresql://postgres:postgres@localhost/questcity')
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã
        inspector = inspect(engine)
        tables = inspector.get_table_names()
        print(f"  –í—Å–µ —Ç–∞–±–ª–∏—Ü—ã –≤ –±–∞–∑–µ: {tables}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ö–µ–º—É —Ç–∞–±–ª–∏—Ü—ã activity
        if 'activity' in tables:
            columns = inspector.get_columns('activity')
            print(f"  –ö–æ–ª–æ–Ω–∫–∏ —Ç–∞–±–ª–∏—Ü—ã activity: {[col['name'] for col in columns]}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∞–Ω–Ω—ã–µ
            with engine.connect() as conn:
                result = conn.execute(text("SELECT * FROM activity WHERE id = 1"))
                row = result.fetchone()
                print(f"  SQL –∑–∞–ø—Ä–æ—Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç: {row}")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ –∑–∞–ø–∏—Å–∏
                result = conn.execute(text("SELECT * FROM activity"))
                all_rows = result.fetchall()
                print(f"  –í—Å–µ –∑–∞–ø–∏—Å–∏ –≤ activity: {all_rows}")
        else:
            print("  ‚ùå –¢–∞–±–ª–∏—Ü–∞ 'activity' –ù–ï –ù–ê–ô–î–ï–ù–ê!")
            
            # –ò—â–µ–º –ø–æ—Ö–æ–∂–∏–µ —Ç–∞–±–ª–∏—Ü—ã
            similar_tables = [t for t in tables if 'activity' in t.lower() or 'type' in t.lower()]
            print(f"  –ü–æ—Ö–æ–∂–∏–µ —Ç–∞–±–ª–∏—Ü—ã: {similar_tables}")
            
    except Exception as e:
        print(f"  –û—à–∏–±–∫–∞: {e}")

def test_activity_model():
    print("üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º –º–æ–¥–µ–ª—å Activity...")
    try:
        from src.db.models.quest.point import Activity
        
        print(f"  –ú–æ–¥–µ–ª—å: {Activity}")
        print(f"  –¢–∞–±–ª–∏—Ü–∞: {Activity.__tablename__}")
        print(f"  –°—Ö–µ–º–∞: {Activity.__table__.schema}")
        print(f"  –ü–æ–ª–Ω–æ–µ –∏–º—è: {Activity.__table__.fullname}")
        print(f"  –ö–æ–ª–æ–Ω–∫–∏: {[c.name for c in Activity.__table__.columns]}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø—Ä–æ–±–ª–µ–º—ã —Å –∏–º–ø–æ—Ä—Ç–æ–º
        print(f"  –ú–æ–¥—É–ª—å: {Activity.__module__}")
        print(f"  –ö–ª–∞—Å—Å: {Activity.__class__}")
        
    except Exception as e:
        print(f"  –û—à–∏–±–∫–∞ –º–æ–¥–µ–ª–∏: {e}")

if __name__ == "__main__":
    print("üöÄ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ç–∞–±–ª–∏—Ü—É activity...")
    test_activity_table()
    test_activity_model()
















