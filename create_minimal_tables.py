#!/usr/bin/env python3
"""
–°–æ–∑–¥–∞–Ω–∏–µ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö —Ç–∞–±–ª–∏—Ü
"""
import psycopg2

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–µ—Ä–≤–µ—Ä–Ω–æ–π –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
SERVER_DB_CONFIG = {
    'host': '7da2c0adf39345ca39269f40.twc1.net',
    'port': 5432,
    'database': 'default_db',
    'user': 'gen_user',
    'password': '|dls1z:N7#v>vr',
    'sslmode': 'disable'
}

def create_minimal_tables():
    """–°–æ–∑–¥–∞–Ω–∏–µ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö —Ç–∞–±–ª–∏—Ü"""
    print("üîß –°–û–ó–î–ê–ù–ò–ï –ú–ò–ù–ò–ú–ê–õ–¨–ù–û –ù–ï–û–ë–•–û–î–ò–ú–´–• –¢–ê–ë–õ–ò–¶")
    print("=" * 80)
    
    try:
        conn = psycopg2.connect(**SERVER_DB_CONFIG)
        conn.autocommit = True
        cursor = conn.cursor()
        
        # –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É review_response
        print("\nüîß –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã review_response...")
        cursor.execute("""
            CREATE TABLE IF NOT EXISTS review_response (
                id SERIAL PRIMARY KEY,
                text TEXT NOT NULL,
                created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
                updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
                review_id INTEGER,
                user_id INTEGER
            )
        """)
        print("  ‚úÖ –¢–∞–±–ª–∏—Ü–∞ review_response —Å–æ–∑–¥–∞–Ω–∞")
        
        # –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É review
        print("\nüîß –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã review...")
        cursor.execute("""
            CREATE TABLE IF NOT EXISTS review (
                id SERIAL PRIMARY KEY,
                rating INTEGER NOT NULL,
                created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
                updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
                quest_id INTEGER NOT NULL,
                text TEXT NOT NULL,
                owner_id INTEGER NOT NULL,
                user_id INTEGER
            )
        """)
        print("  ‚úÖ –¢–∞–±–ª–∏—Ü–∞ review —Å–æ–∑–¥–∞–Ω–∞")
        
        # –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É refresh_token
        print("\nüîß –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã refresh_token...")
        cursor.execute("""
            CREATE TABLE IF NOT EXISTS refresh_token (
                id SERIAL PRIMARY KEY,
                token VARCHAR(255) NOT NULL,
                user_id INTEGER NOT NULL,
                expires_at TIMESTAMP WITH TIME ZONE NOT NULL,
                created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP
            )
        """)
        print("  ‚úÖ –¢–∞–±–ª–∏—Ü–∞ refresh_token —Å–æ–∑–¥–∞–Ω–∞")
        
        # –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É reset_password_token
        print("\nüîß –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã reset_password_token...")
        cursor.execute("""
            CREATE TABLE IF NOT EXISTS reset_password_token (
                id SERIAL PRIMARY KEY,
                token VARCHAR(255) NOT NULL,
                user_id INTEGER NOT NULL,
                expires_at TIMESTAMP WITH TIME ZONE NOT NULL,
                created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP
            )
        """)
        print("  ‚úÖ –¢–∞–±–ª–∏—Ü–∞ reset_password_token —Å–æ–∑–¥–∞–Ω–∞")
        
        # –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É email_verification_code
        print("\nüîß –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã email_verification_code...")
        cursor.execute("""
            CREATE TABLE IF NOT EXISTS email_verification_code (
                code INTEGER NOT NULL,
                email VARCHAR(30) NOT NULL,
                optional_data JSON,
                created_at TIMESTAMP WITHOUT TIME ZONE DEFAULT TIMEZONE('utc', now()) NOT NULL,
                CONSTRAINT pk_email_verification_code PRIMARY KEY (code, email)
            )
        """)
        print("  ‚úÖ –¢–∞–±–ª–∏—Ü–∞ email_verification_code —Å–æ–∑–¥–∞–Ω–∞")
        
        cursor.close()
        conn.close()
        print("\n‚úÖ –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    create_minimal_tables()
