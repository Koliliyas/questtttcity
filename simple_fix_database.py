#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–µ—Ä–≤–µ—Ä–Ω–æ–π –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
"""
import psycopg2
from datetime import datetime

# –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–µ—Ä–≤–µ—Ä–Ω–æ–π –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
SERVER_DB_CONFIG = {
    'host': '7da2c0adf39345ca39269f40.twc1.net',
    'port': 5432,
    'database': 'default_db',
    'user': 'gen_user',
    'password': '|dls1z:N7#v>vr'
}

def simple_fix_database():
    """–ü—Ä–æ—Å—Ç–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    print("üîß –ü—Ä–æ—Å—Ç–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–µ—Ä–≤–µ—Ä–Ω–æ–π –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö")
    print("=" * 80)
    print(f"üìÖ –í—Ä–µ–º—è: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
    print()

    try:
        # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–µ—Ä–≤–µ—Ä–Ω–æ–π –±–∞–∑–µ —Å –∞–≤—Ç–æ–∫–æ–º–º–∏—Ç–æ–º
        print("üîó –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–µ—Ä–≤–µ—Ä–Ω–æ–π –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...")
        conn = psycopg2.connect(**SERVER_DB_CONFIG)
        conn.autocommit = True  # –í–∫–ª—é—á–∞–µ–º –∞–≤—Ç–æ–∫–æ–º–º–∏—Ç
        cursor = conn.cursor()
        print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–µ—Ä–≤–µ—Ä–Ω–æ–π –±–∞–∑–µ —É—Å–ø–µ—à–Ω–æ!")

        # –®–∞–≥ 1: –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É point_type
        print("\nüìù –®–∞–≥ 1: –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã point_type...")
        cursor.execute("""
            CREATE TABLE IF NOT EXISTS point_type (
                id SERIAL PRIMARY KEY,
                name VARCHAR NOT NULL,
                description TEXT,
                created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
            )
        """)
        print("‚úÖ –¢–∞–±–ª–∏—Ü–∞ point_type —Å–æ–∑–¥–∞–Ω–∞")

        # –®–∞–≥ 2: –ó–∞–ø–æ–ª–Ω—è–µ–º point_type –¥–∞–Ω–Ω—ã–º–∏ –∏–∑ activity
        print("\nüìù –®–∞–≥ 2: –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ point_type –¥–∞–Ω–Ω—ã–º–∏...")
        cursor.execute("""
            INSERT INTO point_type (id, name, description)
            SELECT id, name, description FROM activity
            ON CONFLICT (id) DO NOTHING
        """)
        print("‚úÖ –î–∞–Ω–Ω—ã–µ –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ point_type")

        # –®–∞–≥ 3: –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é —Ç–∞–±–ª–∏—Ü—É point —Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π
        print("\nüìù –®–∞–≥ 3: –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π —Ç–∞–±–ª–∏—Ü—ã point...")
        cursor.execute("""
            CREATE TABLE point_new (
                id SERIAL PRIMARY KEY,
                name_of_location VARCHAR NOT NULL,
                "order" INTEGER NOT NULL,
                description TEXT NOT NULL,
                type_id INTEGER NOT NULL,
                type_photo VARCHAR,
                type_code INTEGER,
                type_word VARCHAR,
                tool_id INTEGER,
                file VARCHAR,
                is_divide BOOLEAN DEFAULT false,
                quest_id INTEGER NOT NULL
            )
        """)
        print("‚úÖ –ù–æ–≤–∞—è —Ç–∞–±–ª–∏—Ü–∞ point_new —Å–æ–∑–¥–∞–Ω–∞")

        # –®–∞–≥ 4: –ö–æ–ø–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Å—Ç–∞—Ä–æ–π —Ç–∞–±–ª–∏—Ü—ã point
        print("\nüìù –®–∞–≥ 4: –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ —Å—Ç–∞—Ä–æ–π —Ç–∞–±–ª–∏—Ü—ã point...")
        cursor.execute("""
            INSERT INTO point_new (id, name_of_location, "order", description, type_id, quest_id)
            SELECT 
                id,
                COALESCE(name, 'Unknown Location') as name_of_location,
                COALESCE(order_index, 1) as "order",
                COALESCE(description, 'No description') as description,
                1 as type_id,
                quest_id
            FROM point
        """)
        print("‚úÖ –î–∞–Ω–Ω—ã–µ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω—ã –≤ point_new")

        # –®–∞–≥ 5: –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—É—é —Ç–∞–±–ª–∏—Ü—É point –∏ –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤—ã–≤–∞–µ–º –Ω–æ–≤—É—é
        print("\nüìù –®–∞–≥ 5: –ó–∞–º–µ–Ω–∞ —Å—Ç–∞—Ä–æ–π —Ç–∞–±–ª–∏—Ü—ã point...")
        cursor.execute("DROP TABLE point")
        cursor.execute("ALTER TABLE point_new RENAME TO point")
        print("‚úÖ –°—Ç–∞—Ä–∞—è —Ç–∞–±–ª–∏—Ü–∞ point –∑–∞–º–µ–Ω–µ–Ω–∞ –Ω–∞ –Ω–æ–≤—É—é")

        # –®–∞–≥ 6: –°–æ–∑–¥–∞–µ–º –∏–Ω–¥–µ–∫—Å—ã
        print("\nüìù –®–∞–≥ 6: –°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω–¥–µ–∫—Å–æ–≤...")
        cursor.execute("CREATE INDEX IF NOT EXISTS idx_point_quest_id ON point(quest_id)")
        cursor.execute("CREATE INDEX IF NOT EXISTS idx_point_type_id ON point(type_id)")
        print("‚úÖ –ò–Ω–¥–µ–∫—Å—ã —Å–æ–∑–¥–∞–Ω—ã")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        print("\nüìä –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤...")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –Ω–æ–≤–æ–π —Ç–∞–±–ª–∏—Ü—ã point
        cursor.execute("""
            SELECT column_name, data_type, is_nullable
            FROM information_schema.columns 
            WHERE table_name = 'point' AND table_schema = 'public'
            ORDER BY ordinal_position
        """)
        point_columns = cursor.fetchall()
        
        print(f"üìç –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ç–∞–±–ª–∏—Ü—ã point –ø–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è:")
        for col in point_columns:
            print(f"  - {col[0]}: {col[1]} (nullable: {col[2]})")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ç–∞–±–ª–∏—Ü—ã point_type
        cursor.execute("""
            SELECT EXISTS (
                SELECT FROM information_schema.tables 
                WHERE table_schema = 'public' 
                AND table_name = 'point_type'
            )
        """)
        point_type_exists = cursor.fetchone()[0]
        
        if point_type_exists:
            print("‚úÖ –¢–∞–±–ª–∏—Ü–∞ point_type —Å–æ–∑–¥–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ point_type
            cursor.execute("SELECT COUNT(*) FROM point_type")
            point_type_count = cursor.fetchone()[0]
            print(f"üìà –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π –≤ point_type: {point_type_count}")
        else:
            print("‚ùå –¢–∞–±–ª–∏—Ü–∞ point_type –Ω–µ –±—ã–ª–∞ —Å–æ–∑–¥–∞–Ω–∞")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Ç–∞–±–ª–∏—Ü
        print("\nüìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ç–∞–±–ª–∏—Ü –ø–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è:")
        tables_to_check = ['point', 'category', 'vehicle', 'place', 'activity', 'tool', 'point_type', 'place_settings', 'quest']
        
        for table in tables_to_check:
            try:
                cursor.execute(f"SELECT COUNT(*) FROM {table}")
                count = cursor.fetchone()[0]
                print(f"  - {table}: {count} –∑–∞–ø–∏—Å–µ–π")
            except Exception as e:
                print(f"  - {table}: –æ—à–∏–±–∫–∞ - {e}")

        cursor.close()
        conn.close()
        
        print("\n" + "=" * 80)
        print("üéâ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏–º–µ–Ω–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
        print("‚úÖ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ç–∞–±–ª–∏—Ü—ã point –ø—Ä–∏–≤–µ–¥–µ–Ω–∞ –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —Å –ª–æ–∫–∞–ª—å–Ω–æ–π –≤–µ—Ä—Å–∏–µ–π")
        print("‚úÖ –¢–∞–±–ª–∏—Ü–∞ point_type —Å–æ–∑–¥–∞–Ω–∞ –∏ –∑–∞–ø–æ–ª–Ω–µ–Ω–∞ –¥–∞–Ω–Ω—ã–º–∏")
        print("‚úÖ –¢–µ–ø–µ—Ä—å —Å–æ–∑–¥–∞–Ω–∏–µ –∫–≤–µ—Å—Ç–æ–≤ –¥–æ–ª–∂–Ω–æ —Ä–∞–±–æ—Ç–∞—Ç—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        
        return True

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

def main():
    success = simple_fix_database()
    
    if success:
        print(f"\n{'='*80}")
        print("üéâ –í—Å–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–∏–º–µ–Ω–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
        print("–¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–æ–∑–¥–∞–Ω–∏–µ –∫–≤–µ—Å—Ç–æ–≤ —á–µ—Ä–µ–∑ API")
    else:
        print(f"\n{'='*80}")
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–∏–º–µ–Ω–∏—Ç—å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è")

if __name__ == "__main__":
    main()
