#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤—Ö–æ–¥–∞ –≤ QuestCity —á–µ—Ä–µ–∑ API —Å form-data
"""

import requests
import json
from datetime import datetime

def test_login_form(login, password, base_url="http://questcity.ru/api/v1/"):
    """–¢–µ—Å—Ç –≤—Ö–æ–¥–∞ —á–µ—Ä–µ–∑ API —Å form-data"""
    print(f"üîê –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Ö–æ–¥–∞ –≤ QuestCity API (form-data)")
    print("=" * 50)
    print(f"üìÖ –í—Ä–µ–º—è —Ç–µ—Å—Ç–∞: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
    print(f"üåê API URL: {base_url}")
    print(f"üë§ Login: {login}")
    print()

    # –î–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Ö–æ–¥–∞ –∫–∞–∫ form-data
    login_data = {
        "login": login,
        "password": password
    }

    try:
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –≤—Ö–æ–¥ —Å form-data
        response = requests.post(
            f"{base_url}auth/login",
            data=login_data,  # form-data –≤–º–µ—Å—Ç–æ json
            timeout=10,
            headers={
                "Accept": "application/json"
            }
        )

        print(f"üì° HTTP —Å—Ç–∞—Ç—É—Å: {response.status_code}")
        print(f"üìÑ –ó–∞–≥–æ–ª–æ–≤–∫–∏ –æ—Ç–≤–µ—Ç–∞: {dict(response.headers)}")
        print()

        if response.status_code == 200:
            data = response.json()
            print("‚úÖ –í—Ö–æ–¥ —É—Å–ø–µ—à–µ–Ω!")
            print(f"üìä –û—Ç–≤–µ—Ç API:")
            print(json.dumps(data, indent=2, ensure_ascii=False))
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–∫–µ–Ω
            if "access_token" in data:
                print(f"\nüîë –¢–æ–∫–µ–Ω –ø–æ–ª—É—á–µ–Ω: {data['access_token'][:20]}...")
                return data["access_token"]
            else:
                print("‚ö†Ô∏è –¢–æ–∫–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –æ—Ç–≤–µ—Ç–µ")
                return None
                
        elif response.status_code == 401:
            print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–µ —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ")
            print(f"üìÑ –û—Ç–≤–µ—Ç: {response.text}")
            return None
            
        elif response.status_code == 422:
            print("‚ùå –û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö")
            print(f"üìÑ –û—Ç–≤–µ—Ç: {response.text}")
            return None
            
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: {response.status_code}")
            print(f"üìÑ –û—Ç–≤–µ—Ç: {response.text}")
            return None

    except requests.exceptions.RequestException as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
        return None

def test_api_documentation(base_url="http://questcity.ru/api/v1/"):
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é API"""
    print(f"üìö –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ API...")
    
    try:
        response = requests.get(f"{base_url}docs", timeout=10)
        if response.status_code == 200:
            print("‚úÖ Swagger –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞")
            print(f"üìÑ URL: {base_url}docs")
        else:
            print(f"‚ùå –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞: {response.status_code}")
    except:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é")

def main():
    # –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä–∏–º –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é
    test_api_documentation()
    
    print(f"\n{'='*60}")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –≤—Ö–æ–¥ —Å form-data
    test_accounts = [
        {
            "login": "admin@questcity.com",
            "password": "admin123",
            "description": "–û—Å–Ω–æ–≤–Ω–æ–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä"
        },
        {
            "login": "adminuser@questcity.com", 
            "password": "adminuser123",
            "description": "–ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä"
        },
        {
            "login": "testuser@questcity.com",
            "password": "password123", 
            "description": "–¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"
        }
    ]
    
    for account in test_accounts:
        print(f"\n{'='*60}")
        print(f"üß™ –¢–µ—Å—Ç: {account['description']}")
        print(f"{'='*60}")
        
        token = test_login_form(account["login"], account["password"])
        
        if token:
            print(f"\n‚úÖ {account['description']} - –í–•–û–î –£–°–ü–ï–®–ï–ù!")
            break
        else:
            print(f"\n‚ùå {account['description']} - –í–•–û–î –ù–ï –£–î–ê–õ–°–Ø")
    
    print(f"\n{'='*60}")
    print("üèÅ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ")

if __name__ == "__main__":
    main()

