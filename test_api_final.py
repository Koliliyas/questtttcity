#!/usr/bin/env python3
"""
–§–∏–Ω–∞–ª—å–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API –ø–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
"""
import requests
import json

# –ë–∞–∑–æ–≤—ã–π URL API
BASE_URL = "http://questcity.ru/api/v1"

def test_api():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API"""
    print("üß™ –§–∏–Ω–∞–ª—å–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API –ø–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö")
    print("=" * 80)

    # –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ API
    print("\nüìã –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ API")
    try:
        response = requests.get(f"{BASE_URL}/health", timeout=10)
        print(f"  üì° –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: {response.status_code}")
        if response.status_code == 200:
            print("  ‚úÖ API –¥–æ—Å—Ç—É–ø–µ–Ω")
        else:
            print(f"  ‚ùå API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {response.text}")
    except Exception as e:
        print(f"  ‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")

    # –¢–µ—Å—Ç 2: –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –∞–¥–º–∏–Ω–∞
    print("\nüìã –¢–µ—Å—Ç 2: –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –∞–¥–º–∏–Ω–∞")
    login_data = {
        "login": "admin@questcity.com",
        "password": "admin123"
    }
    
    try:
        response = requests.post(f"{BASE_URL}/auth/login", data=login_data, timeout=10)
        print(f"  üì° –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: {response.status_code}")
        
        if response.status_code == 200:
            result = response.json()
            access_token = result.get('accessToken')
            if access_token:
                print("  ‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞")
                print(f"  üîë –ü–æ–ª—É—á–µ–Ω —Ç–æ–∫–µ–Ω –¥–æ—Å—Ç—É–ø–∞")
                return access_token
            else:
                print("  ‚ùå –¢–æ–∫–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –æ—Ç–≤–µ—Ç–µ")
                print(f"  üìÑ –û—Ç–≤–µ—Ç: {result}")
        else:
            print(f"  ‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: {response.text}")
    except Exception as e:
        print(f"  ‚ùå –û—à–∏–±–∫–∞: {e}")
    
    return None

def test_quest_creation(access_token):
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è –∫–≤–µ—Å—Ç–∞"""
    print("\nüìã –¢–µ—Å—Ç 3: –°–æ–∑–¥–∞–Ω–∏–µ –∫–≤–µ—Å—Ç–∞")
    
    headers = {
        "Authorization": f"Bearer {access_token}",
        "Content-Type": "application/json"
    }
    
    quest_data = {
        "name": "–¢–µ—Å—Ç–æ–≤—ã–π –∫–≤–µ—Å—Ç –ø–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ë–î",
        "description": "–≠—Ç–æ—Ç –∫–≤–µ—Å—Ç —Å–æ–∑–¥–∞–Ω –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö",
        "image_url": "https://example.com/test-quest.jpg",
        "type": "ADVENTURE",
        "is_active": True,
        "cost": 100,
        "reward": 500,
        "duration": 60,
        "group": "TWO",
        "place_id": 1,
        "has_guide": False,
        "mentor_preference": "",
        "timeframe": "ONE_HOUR",
        "level": "EASY",
        "mileage": "UP_TO_TEN",
        "category_id": 1,
        "vehicle_id": 1
    }
    
    try:
        response = requests.post(f"{BASE_URL}/quests/admin/create", json=quest_data, headers=headers, timeout=10)
        print(f"  üì° –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: {response.status_code}")
        
        if response.status_code == 200:
            result = response.json()
            print("  ‚úÖ –ö–≤–µ—Å—Ç —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ")
            print(f"  üìÑ –û—Ç–≤–µ—Ç: {result}")
        else:
            print(f"  ‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∫–≤–µ—Å—Ç–∞: {response.text}")
    except Exception as e:
        print(f"  ‚ùå –û—à–∏–±–∫–∞: {e}")

def main():
    print("üß™ –§–∏–Ω–∞–ª—å–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API –ø–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö")
    print("=" * 80)
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º API
    access_token = test_api()
    
    # –ï—Å–ª–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞, —Ç–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –∫–≤–µ—Å—Ç–∞
    if access_token:
        test_quest_creation(access_token)
    
    print("\n" + "=" * 80)
    print("‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ")

if __name__ == "__main__":
    main()
