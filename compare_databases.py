#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è –ª–æ–∫–∞–ª—å–Ω–æ–π –∏ —Å–µ—Ä–≤–µ—Ä–Ω–æ–π –±–∞–∑ –¥–∞–Ω–Ω—ã—Ö QuestCity
"""
import psycopg2
from datetime import datetime

# –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ª–æ–∫–∞–ª—å–Ω–æ–π –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
LOCAL_DB_CONFIG = {
    'host': 'localhost',
    'port': 5432,
    'database': 'questcity',
    'user': 'postgres',
    'password': 'postgres'
}

# –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–µ—Ä–≤–µ—Ä–Ω–æ–π –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
SERVER_DB_CONFIG = {
    'host': '7da2c0adf39345ca39269f40.twc1.net',
    'port': 5432,
    'database': 'default_db',
    'user': 'gen_user',
    'password': '|dls1z:N7#v>vr'
}

def compare_databases():
    """–°—Ä–∞–≤–Ω–∏–≤–∞–µ—Ç –ª–æ–∫–∞–ª—å–Ω—É—é –∏ —Å–µ—Ä–≤–µ—Ä–Ω—É—é –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    print("üîç –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –ª–æ–∫–∞–ª—å–Ω–æ–π –∏ —Å–µ—Ä–≤–µ—Ä–Ω–æ–π –±–∞–∑ –¥–∞–Ω–Ω—ã—Ö QuestCity")
    print("=" * 80)
    print(f"üìÖ –í—Ä–µ–º—è: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
    print()

    try:
        # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ª–æ–∫–∞–ª—å–Ω–æ–π –±–∞–∑–µ
        print("üîó –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ª–æ–∫–∞–ª—å–Ω–æ–π –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...")
        local_conn = psycopg2.connect(**LOCAL_DB_CONFIG)
        local_cursor = local_conn.cursor()
        print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ª–æ–∫–∞–ª—å–Ω–æ–π –±–∞–∑–µ —É—Å–ø–µ—à–Ω–æ!")

        # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–µ—Ä–≤–µ—Ä–Ω–æ–π –±–∞–∑–µ
        print("üîó –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–µ—Ä–≤–µ—Ä–Ω–æ–π –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...")
        server_conn = psycopg2.connect(**SERVER_DB_CONFIG)
        server_cursor = server_conn.cursor()
        print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–µ—Ä–≤–µ—Ä–Ω–æ–π –±–∞–∑–µ —É—Å–ø–µ—à–Ω–æ!")

        # –°–ø–∏—Å–æ–∫ —Ç–∞–±–ª–∏—Ü –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
        tables_to_compare = [
            'category', 'vehicle', 'place', 'activity', 'tool', 
            'point', 'point_type', 'user', 'profile', 'quest'
        ]

        print(f"\nüìä –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü:")
        print("=" * 80)

        for table_name in tables_to_compare:
            print(f"\nüè∑Ô∏è –¢–∞–±–ª–∏—Ü–∞: {table_name}")
            print("-" * 40)

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã –≤ –ª–æ–∫–∞–ª—å–Ω–æ–π –±–∞–∑–µ
            local_cursor.execute("""
                SELECT EXISTS (
                    SELECT FROM information_schema.tables 
                    WHERE table_schema = 'public' 
                    AND table_name = %s
                )
            """, (table_name,))
            local_exists = local_cursor.fetchone()[0]

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã –≤ —Å–µ—Ä–≤–µ—Ä–Ω–æ–π –±–∞–∑–µ
            server_cursor.execute("""
                SELECT EXISTS (
                    SELECT FROM information_schema.tables 
                    WHERE table_schema = 'public' 
                    AND table_name = %s
                )
            """, (table_name,))
            server_exists = server_cursor.fetchone()[0]

            if not local_exists and not server_exists:
                print(f"‚ùå –¢–∞–±–ª–∏—Ü–∞ {table_name} –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –Ω–∏ –≤ –æ–¥–Ω–æ–π –±–∞–∑–µ")
                continue

            if not local_exists:
                print(f"‚ùå –¢–∞–±–ª–∏—Ü–∞ {table_name} –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ –ª–æ–∫–∞–ª—å–Ω–æ–π –±–∞–∑–µ")
                continue

            if not server_exists:
                print(f"‚ùå –¢–∞–±–ª–∏—Ü–∞ {table_name} –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ —Å–µ—Ä–≤–µ—Ä–Ω–æ–π –±–∞–∑–µ")
                continue

            # –ü–æ–ª—É—á–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π –≤ –ª–æ–∫–∞–ª—å–Ω–æ–π –±–∞–∑–µ
            local_cursor.execute(f"SELECT COUNT(*) FROM {table_name}")
            local_count = local_cursor.fetchone()[0]

            # –ü–æ–ª—É—á–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π –≤ —Å–µ—Ä–≤–µ—Ä–Ω–æ–π –±–∞–∑–µ
            server_cursor.execute(f"SELECT COUNT(*) FROM {table_name}")
            server_count = server_cursor.fetchone()[0]

            print(f"üìà –õ–æ–∫–∞–ª—å–Ω–∞—è –±–∞–∑–∞: {local_count} –∑–∞–ø–∏—Å–µ–π")
            print(f"üìà –°–µ—Ä–≤–µ—Ä–Ω–∞—è –±–∞–∑–∞: {server_count} –∑–∞–ø–∏—Å–µ–π")

            if local_count != server_count:
                print(f"‚ö†Ô∏è –†–ê–ó–õ–ò–ß–ò–ï: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è –Ω–∞ {abs(local_count - server_count)}")

            # –°—Ä–∞–≤–Ω–∏–≤–∞–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã
            print(f"üîß –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ç–∞–±–ª–∏—Ü—ã {table_name}:")
            
            # –ü–æ–ª—É—á–∞–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ª–æ–∫–∞–ª—å–Ω–æ–π —Ç–∞–±–ª–∏—Ü—ã
            local_cursor.execute("""
                SELECT column_name, data_type, is_nullable
                FROM information_schema.columns 
                WHERE table_name = %s AND table_schema = 'public'
                ORDER BY ordinal_position
            """, (table_name,))
            local_columns = local_cursor.fetchall()

            # –ü–æ–ª—É—á–∞–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Å–µ—Ä–≤–µ—Ä–Ω–æ–π —Ç–∞–±–ª–∏—Ü—ã
            server_cursor.execute("""
                SELECT column_name, data_type, is_nullable
                FROM information_schema.columns 
                WHERE table_name = %s AND table_schema = 'public'
                ORDER BY ordinal_position
            """, (table_name,))
            server_columns = server_cursor.fetchall()

            local_cols_set = {(col[0], col[1], col[2]) for col in local_columns}
            server_cols_set = {(col[0], col[1], col[2]) for col in server_columns}

            if local_cols_set != server_cols_set:
                print(f"‚ö†Ô∏è –†–ê–ó–õ–ò–ß–ò–ï: –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ç–∞–±–ª–∏—Ü—ã –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è!")
                
                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–∞–∑–ª–∏—á–∏—è
                local_only = local_cols_set - server_cols_set
                server_only = server_cols_set - local_cols_set
                
                if local_only:
                    print(f"  üìç –¢–æ–ª—å–∫–æ –≤ –ª–æ–∫–∞–ª—å–Ω–æ–π –±–∞–∑–µ:")
                    for col in local_only:
                        print(f"    - {col[0]}: {col[1]} (nullable: {col[2]})")
                
                if server_only:
                    print(f"  üìç –¢–æ–ª—å–∫–æ –≤ —Å–µ—Ä–≤–µ—Ä–Ω–æ–π –±–∞–∑–µ:")
                    for col in server_only:
                        print(f"    - {col[0]}: {col[1]} (nullable: {col[2]})")
            else:
                print(f"‚úÖ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ç–∞–±–ª–∏—Ü—ã –∏–¥–µ–Ω—Ç–∏—á–Ω–∞")

            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø—Ä–∏–º–µ—Ä–æ–≤ –¥–∞–Ω–Ω—ã—Ö
            if local_count > 0:
                print(f"üìã –ü—Ä–∏–º–µ—Ä—ã –¥–∞–Ω–Ω—ã—Ö –∏–∑ –ª–æ–∫–∞–ª—å–Ω–æ–π –±–∞–∑—ã:")
                local_cursor.execute(f"SELECT * FROM {table_name} LIMIT 3")
                local_samples = local_cursor.fetchall()
                for i, sample in enumerate(local_samples, 1):
                    print(f"  {i}. {sample}")

            if server_count > 0:
                print(f"üìã –ü—Ä–∏–º–µ—Ä—ã –¥–∞–Ω–Ω—ã—Ö –∏–∑ —Å–µ—Ä–≤–µ—Ä–Ω–æ–π –±–∞–∑—ã:")
                server_cursor.execute(f"SELECT * FROM {table_name} LIMIT 3")
                server_samples = server_cursor.fetchall()
                for i, sample in enumerate(server_samples, 1):
                    print(f"  {i}. {sample}")

        # –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
        local_cursor.close()
        local_conn.close()
        server_cursor.close()
        server_conn.close()
        
        print("\n" + "=" * 80)
        print("‚úÖ –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ")
        
        return True

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

def main():
    success = compare_databases()
    
    if not success:
        print("\n‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å—Ä–∞–≤–Ω–∏—Ç—å –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö")

if __name__ == "__main__":
    main()

