#!/usr/bin/env python3
"""
–§–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –∫–≤–µ—Å—Ç–∞ —á–µ—Ä–µ–∑ API –ø–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
"""
import requests
import json
from datetime import datetime

# URL API
BASE_URL = "http://questcity.ru/api/v1"

def test_quest_creation():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Å–æ–∑–¥–∞–Ω–∏–µ –∫–≤–µ—Å—Ç–∞ —á–µ—Ä–µ–∑ API"""
    print("üß™ –§–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –∫–≤–µ—Å—Ç–∞ —á–µ—Ä–µ–∑ API")
    print("=" * 80)
    print(f"üìÖ –í—Ä–µ–º—è: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
    print()

    # –°–Ω–∞—á–∞–ª–∞ –ø–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    print("üîê –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏...")
    login_data = {
        'login': 'admin@questcity.com',
        'password': 'admin123'
    }
    
    try:
        login_response = requests.post(f"{BASE_URL}/auth/login", data=login_data)
        print(f"üì° –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: {login_response.status_code}")
        
        if login_response.status_code == 200:
            login_result = login_response.json()
            access_token = login_result.get('accessToken')
            print("‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞!")
            print(f"üîë –¢–æ–∫–µ–Ω –ø–æ–ª—É—á–µ–Ω: {access_token[:20]}...")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: {login_response.text}")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: {e}")
        return False

    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –∫–≤–µ—Å—Ç–∞ —á–µ—Ä–µ–∑ /quests/admin/create
    print("\nüìù –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è –∫–≤–µ—Å—Ç–∞ —á–µ—Ä–µ–∑ /quests/admin/create...")
    
    quest_data = {
        "name": "–¢–µ—Å—Ç–æ–≤—ã–π –∫–≤–µ—Å—Ç –ø–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ë–î",
        "description": "–≠—Ç–æ—Ç –∫–≤–µ—Å—Ç —Å–æ–∑–¥–∞–Ω –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö",
        "image_url": "https://example.com/test-quest.jpg",
        "type": "ADVENTURE",
        "is_active": True,
        "cost": 100,
        "reward": 500,
        "duration": 60,
        "group_size": "TWO",
        "place_id": 1,
        "has_guide": False,
        "mentor_preference": "",
        "timeframe": "ONE_HOUR",
        "level": "EASY",
        "mileage": "UP_TO_TEN",
        "category_id": 1,
        "points": [
            {
                "name_of_location": "–°—Ç–∞—Ä—Ç–æ–≤–∞—è —Ç–æ—á–∫–∞",
                "order": 1,
                "description": "–ù–∞—á–∞–ª–æ –∫–≤–µ—Å—Ç–∞",
                "type_id": 1,
                "tool_id": None,
                "is_divide": False
            },
            {
                "name_of_location": "–ü—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω–∞—è —Ç–æ—á–∫–∞",
                "order": 2,
                "description": "–°—Ä–µ–¥–Ω—è—è —Ç–æ—á–∫–∞ –∫–≤–µ—Å—Ç–∞",
                "type_id": 2,
                "tool_id": 1,
                "is_divide": False
            }
        ]
    }

    headers = {
        'Authorization': f'Bearer {access_token}',
        'Content-Type': 'application/json'
    }

    try:
        response = requests.post(
            f"{BASE_URL}/quests/admin/create",
            json=quest_data,
            headers=headers
        )
        
        print(f"üì° –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: {response.status_code}")
        print(f"üìÑ –ó–∞–≥–æ–ª–æ–≤–∫–∏ –æ—Ç–≤–µ—Ç–∞: {dict(response.headers)}")
        
        if response.status_code == 200:
            result = response.json()
            print("‚úÖ –ö–≤–µ—Å—Ç —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!")
            print(f"üìã –†–µ–∑—É–ª—å—Ç–∞—Ç: {json.dumps(result, indent=2, ensure_ascii=False)}")
            return True
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∫–≤–µ—Å—Ç–∞: {response.status_code}")
            print(f"üìÑ –û—Ç–≤–µ—Ç: {response.text}")
            
            # –ü—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å –±–æ–ª–µ–µ –ø–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ—à–∏–±–∫–µ
            try:
                error_data = response.json()
                print(f"üîç –î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏: {json.dumps(error_data, indent=2, ensure_ascii=False)}")
            except:
                print("üîç –ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞–∑–æ–±—Ä–∞—Ç—å JSON –æ—Ç–≤–µ—Ç")
            
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫–≤–µ—Å—Ç–∞: {e}")
        return False

def test_simple_quest_creation():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Å–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ—Å—Ç–æ–≥–æ –∫–≤–µ—Å—Ç–∞ –±–µ–∑ —Ç–æ—á–µ–∫"""
    print("\nüìù –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ—Å—Ç–æ–≥–æ –∫–≤–µ—Å—Ç–∞ –±–µ–∑ —Ç–æ—á–µ–∫...")
    
    # –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω
    login_data = {
        'login': 'admin@questcity.com',
        'password': 'admin123'
    }
    
    try:
        login_response = requests.post(f"{BASE_URL}/auth/login", data=login_data)
        if login_response.status_code == 200:
            access_token = login_response.json().get('accessToken')
        else:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ç–æ–∫–µ–Ω –¥–ª—è –ø—Ä–æ—Å—Ç–æ–≥–æ —Ç–µ—Å—Ç–∞")
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ç–æ–∫–µ–Ω–∞: {e}")
        return False

    # –ü—Ä–æ—Å—Ç–æ–π –∫–≤–µ—Å—Ç –±–µ–∑ —Ç–æ—á–µ–∫
    simple_quest_data = {
        "name": "–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç–æ–≤—ã–π –∫–≤–µ—Å—Ç",
        "description": "–ü—Ä–æ—Å—Ç–æ–π –∫–≤–µ—Å—Ç –±–µ–∑ —Ç–æ—á–µ–∫ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è",
        "image_url": "https://example.com/simple-quest.jpg",
        "type": "ADVENTURE",
        "is_active": True,
        "cost": 50,
        "reward": 200,
        "duration": 30,
        "group_size": "TWO",
        "place_id": 1,
        "has_guide": False,
        "mentor_preference": "",
        "timeframe": "ONE_HOUR",
        "level": "EASY",
        "mileage": "UP_TO_TEN",
        "category_id": 1
    }

    headers = {
        'Authorization': f'Bearer {access_token}',
        'Content-Type': 'application/json'
    }

    try:
        response = requests.post(
            f"{BASE_URL}/quests/admin/create",
            json=simple_quest_data,
            headers=headers
        )
        
        print(f"üì° –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: {response.status_code}")
        
        if response.status_code == 200:
            result = response.json()
            print("‚úÖ –ü—Ä–æ—Å—Ç–æ–π –∫–≤–µ—Å—Ç —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!")
            print(f"üìã –†–µ–∑—É–ª—å—Ç–∞—Ç: {json.dumps(result, indent=2, ensure_ascii=False)}")
            return True
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ—Å—Ç–æ–≥–æ –∫–≤–µ—Å—Ç–∞: {response.status_code}")
            print(f"üìÑ –û—Ç–≤–µ—Ç: {response.text}")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø—Ä–æ—Å—Ç–æ–≥–æ –∫–≤–µ—Å—Ç–∞: {e}")
        return False

def main():
    print("üß™ –§–∏–Ω–∞–ª—å–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è –∫–≤–µ—Å—Ç–æ–≤")
    print("=" * 80)
    
    # –¢–µ—Å—Ç 1: –°–æ–∑–¥–∞–Ω–∏–µ –∫–≤–µ—Å—Ç–∞ —Å —Ç–æ—á–∫–∞–º–∏
    success1 = test_quest_creation()
    
    # –¢–µ—Å—Ç 2: –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ—Å—Ç–æ–≥–æ –∫–≤–µ—Å—Ç–∞ –±–µ–∑ —Ç–æ—á–µ–∫
    success2 = test_simple_quest_creation()
    
    print(f"\n{'='*80}")
    if success1 and success2:
        print("üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!")
        print("‚úÖ –°–æ–∑–¥–∞–Ω–∏–µ –∫–≤–µ—Å—Ç–æ–≤ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        print("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∞ –∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∏—Ä—É–µ—Ç")
    elif success2:
        print("‚ö†Ô∏è –ß–∞—Å—Ç–∏—á–Ω—ã–π —É—Å–ø–µ—Ö")
        print("‚úÖ –ü—Ä–æ—Å—Ç—ã–µ –∫–≤–µ—Å—Ç—ã —Å–æ–∑–¥–∞—é—Ç—Å—è —É—Å–ø–µ—à–Ω–æ")
        print("‚ùå –ö–≤–µ—Å—Ç—ã —Å —Ç–æ—á–∫–∞–º–∏ —Ç—Ä–µ–±—É—é—Ç –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏")
    else:
        print("‚ùå –¢–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ—à–ª–∏")
        print("üîß –¢—Ä–µ–±—É–µ—Ç—Å—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞")

if __name__ == "__main__":
    main()
