#!/usr/bin/env python3
"""
–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–∏–ø–∞ –∫–æ–ª–æ–Ω–∫–∏ id –≤ —Ç–∞–±–ª–∏—Ü–µ user —Å INTEGER –Ω–∞ UUID
"""
import psycopg2

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–µ—Ä–≤–µ—Ä–Ω–æ–π –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
SERVER_DB_CONFIG = {
    'host': '7da2c0adf39345ca39269f40.twc1.net',
    'port': 5432,
    'database': 'default_db',
    'user': 'gen_user',
    'password': '|dls1z:N7#v>vr',
    'sslmode': 'disable'
}

def fix_user_id_type():
    """–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–∏–ø–∞ –∫–æ–ª–æ–Ω–∫–∏ id –≤ —Ç–∞–±–ª–∏—Ü–µ user"""
    print("üîß –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –¢–ò–ü–ê –ö–û–õ–û–ù–ö–ò ID –í –¢–ê–ë–õ–ò–¶–ï USER")
    print("=" * 80)
    
    try:
        conn = psycopg2.connect(**SERVER_DB_CONFIG)
        conn.autocommit = True
        cursor = conn.cursor()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–∏–π —Ç–∏–ø –∫–æ–ª–æ–Ω–∫–∏ id
        print("\nüìã –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–∫—É—â–µ–≥–æ —Ç–∏–ø–∞ –∫–æ–ª–æ–Ω–∫–∏ id...")
        cursor.execute("""
            SELECT column_name, data_type, is_nullable 
            FROM information_schema.columns 
            WHERE table_name = 'user' AND column_name = 'id'
        """)
        column_info = cursor.fetchone()
        
        if column_info:
            print(f"üìä –¢–µ–∫—É—â–∏–π —Ç–∏–ø: {column_info[0]} ({column_info[1]}, nullable: {column_info[2]})")
            
            if column_info[1] == 'integer':
                print("  üîß –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ç–∏–ø–∞ —Å INTEGER –Ω–∞ UUID...")
                try:
                    # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é —Ç–∞–±–ª–∏—Ü—É —Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π
                    cursor.execute("""
                        CREATE TABLE user_temp (
                            id UUID PRIMARY KEY,
                            email VARCHAR NOT NULL,
                            username VARCHAR NOT NULL,
                            password VARCHAR NOT NULL,
                            is_active BOOLEAN,
                            is_superuser BOOLEAN,
                            created_at TIMESTAMP WITH TIME ZONE,
                            updated_at TIMESTAMP WITH TIME ZONE,
                            profile_id INTEGER,
                            first_name VARCHAR(255),
                            last_name VARCHAR(255),
                            full_name VARCHAR(255),
                            role VARCHAR(50),
                            is_verified BOOLEAN DEFAULT FALSE,
                            can_edit_quests BOOLEAN DEFAULT FALSE,
                            can_lock_users BOOLEAN DEFAULT FALSE
                        )
                    """)
                    print("  ‚úÖ –í—Ä–µ–º–µ–Ω–Ω–∞—è —Ç–∞–±–ª–∏—Ü–∞ —Å–æ–∑–¥–∞–Ω–∞")
                    
                    # –ö–æ–ø–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ, –≥–µ–Ω–µ—Ä–∏—Ä—É—è –Ω–æ–≤—ã–µ UUID
                    cursor.execute("""
                        INSERT INTO user_temp (
                            id, email, username, password, is_active, is_superuser,
                            created_at, updated_at, profile_id, first_name, last_name,
                            full_name, role, is_verified, can_edit_quests, can_lock_users
                        )
                        SELECT 
                            gen_random_uuid(), email, username, password, is_active, is_superuser,
                            created_at, updated_at, profile_id, first_name, last_name,
                            full_name, role, is_verified, can_edit_quests, can_lock_users
                        FROM "user"
                    """)
                    print("  ‚úÖ –î–∞–Ω–Ω—ã–µ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω—ã –≤–æ –≤—Ä–µ–º–µ–Ω–Ω—É—é —Ç–∞–±–ª–∏—Ü—É")
                    
                    # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—É—é —Ç–∞–±–ª–∏—Ü—É
                    cursor.execute('DROP TABLE "user" CASCADE')
                    print("  ‚úÖ –°—Ç–∞—Ä–∞—è —Ç–∞–±–ª–∏—Ü–∞ —É–¥–∞–ª–µ–Ω–∞")
                    
                    # –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤—ã–≤–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é —Ç–∞–±–ª–∏—Ü—É
                    cursor.execute('ALTER TABLE user_temp RENAME TO "user"')
                    print("  ‚úÖ –í—Ä–µ–º–µ–Ω–Ω–∞—è —Ç–∞–±–ª–∏—Ü–∞ –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∞")
                    
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
                    cursor.execute("""
                        SELECT column_name, data_type, is_nullable 
                        FROM information_schema.columns 
                        WHERE table_name = 'user' AND column_name = 'id'
                    """)
                    new_column_info = cursor.fetchone()
                    print(f"  üìä –ù–æ–≤—ã–π —Ç–∏–ø: {new_column_info[0]} ({new_column_info[1]}, nullable: {new_column_info[2]})")
                    
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∞–Ω–Ω—ã–µ
                    cursor.execute('SELECT id, email, username FROM "user"')
                    users = cursor.fetchall()
                    print(f"  üìã –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {len(users)}")
                    for user in users:
                        print(f"    - {user[0]} | {user[1]} | {user[2]}")
                    
                except Exception as e:
                    print(f"  ‚ùå –û—à–∏–±–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ç–∏–ø–∞: {e}")
            else:
                print("  ‚úÖ –¢–∏–ø —É–∂–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π (UUID)")
        else:
            print("  ‚ùå –ö–æ–ª–æ–Ω–∫–∞ id –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        
        cursor.close()
        conn.close()
        print("\n‚úÖ –¢–∏–ø –∫–æ–ª–æ–Ω–∫–∏ id –∏—Å–ø—Ä–∞–≤–ª–µ–Ω!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    fix_user_id_type()
