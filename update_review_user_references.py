#!/usr/bin/env python3
"""
–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Å—ã–ª–æ–∫ user_id –≤ —Ç–∞–±–ª–∏—Ü–µ review
"""
import psycopg2

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–µ—Ä–≤–µ—Ä–Ω–æ–π –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
SERVER_DB_CONFIG = {
    'host': '7da2c0adf39345ca39269f40.twc1.net',
    'port': 5432,
    'database': 'default_db',
    'user': 'gen_user',
    'password': '|dls1z:N7#v>vr',
    'sslmode': 'disable'
}

def update_review_user_references():
    """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Å—ã–ª–æ–∫ user_id –≤ —Ç–∞–±–ª–∏—Ü–µ review"""
    print("üîß –û–ë–ù–û–í–õ–ï–ù–ò–ï –°–°–´–õ–û–ö USER_ID –í –¢–ê–ë–õ–ò–¶–ï REVIEW")
    print("=" * 80)
    
    try:
        conn = psycopg2.connect(**SERVER_DB_CONFIG)
        conn.autocommit = True
        cursor = conn.cursor()
        
        # –ü–æ–ª—É—á–∞–µ–º ID –∞–¥–º–∏–Ω–∞
        print("\nüìã –ü–æ–ª—É—á–µ–Ω–∏–µ ID –∞–¥–º–∏–Ω–∞...")
        cursor.execute('SELECT id FROM "user" WHERE email = %s', ("admin@questcity.com",))
        admin_id = cursor.fetchone()
        
        if admin_id:
            admin_uuid = admin_id[0]
            print(f"  üìã ID –∞–¥–º–∏–Ω–∞: {admin_uuid}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ –≤ review
            print("\nüìã –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–∫—É—â–∏—Ö –¥–∞–Ω–Ω—ã—Ö –≤ review...")
            cursor.execute('SELECT id, user_id, owner_id FROM review')
            reviews = cursor.fetchall()
            print(f"  üìä –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π: {len(reviews)}")
            for review in reviews:
                print(f"    - ID: {review[0]}, user_id: {review[1]}, owner_id: {review[2]}")
            
            # –û–±–Ω–æ–≤–ª—è–µ–º user_id –¥–ª—è –≤—Å–µ—Ö –∑–∞–ø–∏—Å–µ–π
            print("\nüîß –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ user_id...")
            cursor.execute('UPDATE review SET user_id = %s WHERE user_id IS NULL OR user_id != %s', (admin_uuid, admin_uuid))
            updated_count = cursor.rowcount
            print(f"  ‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π: {updated_count}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
            print("\nüìã –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞...")
            cursor.execute('SELECT id, user_id, owner_id FROM review')
            reviews_after = cursor.fetchall()
            print(f"  üìä –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π: {len(reviews_after)}")
            for review in reviews_after:
                print(f"    - ID: {review[0]}, user_id: {review[1]}, owner_id: {review[2]}")
            
        else:
            print("  ‚ùå –ê–¥–º–∏–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω")
        
        cursor.close()
        conn.close()
        print("\n‚úÖ –°—Å—ã–ª–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω—ã!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    update_review_user_references()
