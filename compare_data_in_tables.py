#!/usr/bin/env python3
"""
–î–µ—Ç–∞–ª—å–Ω–æ–µ —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –≤–æ –≤—Å–µ—Ö —Ç–∞–±–ª–∏—Ü–∞—Ö –º–µ–∂–¥—É –ª–æ–∫–∞–ª—å–Ω–æ–π –∏ —Å–µ—Ä–≤–µ—Ä–Ω–æ–π –ë–î
"""
import psycopg2
import json
from typing import Dict, List, Any

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ª–æ–∫–∞–ª—å–Ω–æ–π –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
LOCAL_DB_CONFIG = {
    'host': 'localhost',
    'port': 5432,
    'database': 'questcity',
    'user': 'postgres',
    'password': 'postgres'
}

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–µ—Ä–≤–µ—Ä–Ω–æ–π –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
SERVER_DB_CONFIG = {
    'host': '7da2c0adf39345ca39269f40.twc1.net',
    'port': 5432,
    'database': 'default_db',
    'user': 'gen_user',
    'password': '|dls1z:N7#v>vr',
    'sslmode': 'disable'
}

def get_connection(config: Dict[str, Any]):
    """–°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"""
    try:
        conn = psycopg2.connect(**config)
        return conn
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î: {e}")
        return None

def get_all_tables(conn) -> List[str]:
    """–ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –≤—Å–µ—Ö —Ç–∞–±–ª–∏—Ü"""
    try:
        cursor = conn.cursor()
        cursor.execute("""
            SELECT table_name 
            FROM information_schema.tables 
            WHERE table_schema = 'public' 
            ORDER BY table_name
        """)
        tables = [row[0] for row in cursor.fetchall()]
        cursor.close()
        return tables
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–∞–±–ª–∏—Ü: {e}")
        return []

def get_table_data(conn, table_name: str) -> List[Dict[str, Any]]:
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö –∏–∑ —Ç–∞–±–ª–∏—Ü—ã"""
    try:
        cursor = conn.cursor()
        cursor.execute(f"SELECT * FROM {table_name} ORDER BY id")
        
        # –ü–æ–ª—É—á–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏—è –∫–æ–ª–æ–Ω–æ–∫
        columns = [desc[0] for desc in cursor.description]
        
        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ
        rows = cursor.fetchall()
        data = []
        for row in rows:
            row_dict = {}
            for i, value in enumerate(row):
                # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ JSON-—Å–æ–≤–º–µ—Å—Ç–∏–º—ã–π —Ñ–æ—Ä–º–∞—Ç
                if isinstance(value, (bytes, bytearray)):
                    row_dict[columns[i]] = str(value)
                else:
                    row_dict[columns[i]] = value
            data.append(row_dict)
        
        cursor.close()
        return data
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –∏–∑ —Ç–∞–±–ª–∏—Ü—ã {table_name}: {e}")
        return []

def compare_table_data(local_data: List[Dict], server_data: List[Dict], table_name: str) -> Dict[str, Any]:
    """–°—Ä–∞–≤–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –≤ —Ç–∞–±–ª–∏—Ü–µ"""
    differences = {
        'count_diff': len(local_data) != len(server_data),
        'local_count': len(local_data),
        'server_count': len(server_data),
        'missing_in_server': [],
        'extra_in_server': [],
        'data_differences': []
    }
    
    # –°–æ–∑–¥–∞–µ–º —Å–ª–æ–≤–∞—Ä–∏ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –ø–æ–∏—Å–∫–∞ –ø–æ id
    local_dict = {str(row.get('id', i)): row for i, row in enumerate(local_data)}
    server_dict = {str(row.get('id', i)): row for i, row in enumerate(server_data)}
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ –∑–∞–ø–∏—Å–∏ –≤ —Å–µ—Ä–≤–µ—Ä–µ
    for local_id, local_row in local_dict.items():
        if local_id not in server_dict:
            differences['missing_in_server'].append({
                'id': local_id,
                'local_data': local_row
            })
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–∏—à–Ω–∏–µ –∑–∞–ø–∏—Å–∏ –≤ —Å–µ—Ä–≤–µ—Ä–µ
    for server_id, server_row in server_dict.items():
        if server_id not in local_dict:
            differences['extra_in_server'].append({
                'id': server_id,
                'server_data': server_row
            })
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–ª–∏—á–∏—è –≤ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ–±—â–∏—Ö –∑–∞–ø–∏—Å–µ–π
    for local_id in local_dict:
        if local_id in server_dict:
            local_row = local_dict[local_id]
            server_row = server_dict[local_id]
            
            if local_row != server_row:
                differences['data_differences'].append({
                    'id': local_id,
                    'local_data': local_row,
                    'server_data': server_row
                })
    
    return differences

def compare_all_data():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö"""
    print("üîç –î–ï–¢–ê–õ–¨–ù–û–ï –°–†–ê–í–ù–ï–ù–ò–ï –î–ê–ù–ù–´–• –í –¢–ê–ë–õ–ò–¶–ê–•")
    print("=" * 80)
    
    # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–∞–º –¥–∞–Ω–Ω—ã—Ö
    print("\nüì° –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–∞–º –¥–∞–Ω–Ω—ã—Ö...")
    local_conn = get_connection(LOCAL_DB_CONFIG)
    server_conn = get_connection(SERVER_DB_CONFIG)
    
    if not local_conn or not server_conn:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –æ–¥–Ω–æ–π –∏–∑ –±–∞–∑ –¥–∞–Ω–Ω—ã—Ö")
        return
    
    print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ")
    
    # –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–æ–≤ —Ç–∞–±–ª–∏—Ü
    print("\nüìã –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–æ–≤ —Ç–∞–±–ª–∏—Ü...")
    local_tables = get_all_tables(local_conn)
    server_tables = get_all_tables(server_conn)
    
    common_tables = set(local_tables) & set(server_tables)
    print(f"üìä –û–±—â–∏—Ö —Ç–∞–±–ª–∏—Ü –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è: {len(common_tables)}")
    
    # –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –≤ –∫–∞–∂–¥–æ–π —Ç–∞–±–ª–∏—Ü–µ
    all_differences = {}
    
    for table_name in sorted(common_tables):
        print(f"\nüîç –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –≤ —Ç–∞–±–ª–∏—Ü–µ: {table_name}")
        print("-" * 60)
        
        # –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
        local_data = get_table_data(local_conn, table_name)
        server_data = get_table_data(server_conn, table_name)
        
        print(f"üìä –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π: –ª–æ–∫–∞–ª—å–Ω–∞—è={len(local_data)}, —Å–µ—Ä–≤–µ—Ä–Ω–∞—è={len(server_data)}")
        
        # –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
        differences = compare_table_data(local_data, server_data, table_name)
        all_differences[table_name] = differences
        
        # –í—ã–≤–æ–¥ —Ä–∞–∑–ª–∏—á–∏–π
        if differences['count_diff']:
            print(f"  ‚ö†Ô∏è –†–∞–∑–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π: {len(local_data)} vs {len(server_data)}")
        
        if differences['missing_in_server']:
            print(f"  ‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ –∑–∞–ø–∏—Å–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ: {len(differences['missing_in_server'])}")
            for missing in differences['missing_in_server'][:3]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 3
                print(f"    - ID {missing['id']}: {missing['local_data']}")
            if len(differences['missing_in_server']) > 3:
                print(f"    ... –∏ –µ—â–µ {len(differences['missing_in_server']) - 3} –∑–∞–ø–∏—Å–µ–π")
        
        if differences['extra_in_server']:
            print(f"  ‚ö†Ô∏è –õ–∏—à–Ω–∏–µ –∑–∞–ø–∏—Å–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ: {len(differences['extra_in_server'])}")
            for extra in differences['extra_in_server'][:3]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 3
                print(f"    - ID {extra['id']}: {extra['server_data']}")
            if len(differences['extra_in_server']) > 3:
                print(f"    ... –∏ –µ—â–µ {len(differences['extra_in_server']) - 3} –∑–∞–ø–∏—Å–µ–π")
        
        if differences['data_differences']:
            print(f"  ‚ö†Ô∏è –†–∞–∑–ª–∏—á–∏—è –≤ –¥–∞–Ω–Ω—ã—Ö: {len(differences['data_differences'])} –∑–∞–ø–∏—Å–µ–π")
            for diff in differences['data_differences'][:3]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 3
                print(f"    - ID {diff['id']}:")
                print(f"      –õ–æ–∫–∞–ª—å–Ω–∞—è: {diff['local_data']}")
                print(f"      –°–µ—Ä–≤–µ—Ä–Ω–∞—è: {diff['server_data']}")
            if len(differences['data_differences']) > 3:
                print(f"    ... –∏ –µ—â–µ {len(differences['data_differences']) - 3} —Ä–∞–∑–ª–∏—á–∏–π")
        
        if not any([differences['count_diff'], differences['missing_in_server'], 
                   differences['extra_in_server'], differences['data_differences']]):
            print("  ‚úÖ –î–∞–Ω–Ω—ã–µ –∏–¥–µ–Ω—Ç–∏—á–Ω—ã")
    
    # –ó–∞–∫—Ä—ã—Ç–∏–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π
    local_conn.close()
    server_conn.close()
    
    # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –æ—Ç—á–µ—Ç–∞
    print(f"\nüíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞...")
    with open('data_comparison_report.json', 'w', encoding='utf-8') as f:
        json.dump(all_differences, f, indent=2, ensure_ascii=False, default=str)
    
    print("‚úÖ –û—Ç—á–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ data_comparison_report.json")
    
    # –ò—Ç–æ–≥–æ–≤–∞—è —Å–≤–æ–¥–∫–∞
    print(f"\nüìä –ò–¢–û–ì–û–í–ê–Ø –°–í–û–î–ö–ê")
    print("=" * 80)
    
    tables_with_differences = sum(1 for diff in all_differences.values() 
                                if any([diff['count_diff'], diff['missing_in_server'], 
                                       diff['extra_in_server'], diff['data_differences']]))
    
    print(f"üìã –í—Å–µ–≥–æ —Ç–∞–±–ª–∏—Ü: {len(common_tables)}")
    print(f"‚ö†Ô∏è –¢–∞–±–ª–∏—Ü —Å —Ä–∞–∑–ª–∏—á–∏—è–º–∏ –≤ –¥–∞–Ω–Ω—ã—Ö: {tables_with_differences}")
    print(f"‚úÖ –¢–∞–±–ª–∏—Ü —Å –∏–¥–µ–Ω—Ç–∏—á–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏: {len(common_tables) - tables_with_differences}")
    
    if tables_with_differences > 0:
        print(f"\nüìã –¢–∞–±–ª–∏—Ü—ã —Å —Ä–∞–∑–ª–∏—á–∏—è–º–∏:")
        for table_name, diff in all_differences.items():
            if any([diff['count_diff'], diff['missing_in_server'], 
                   diff['extra_in_server'], diff['data_differences']]):
                print(f"  - {table_name}: {diff['local_count']} vs {diff['server_count']} –∑–∞–ø–∏—Å–µ–π")

if __name__ == "__main__":
    compare_all_data()
