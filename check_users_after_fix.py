#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
"""
import psycopg2
from datetime import datetime

# –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–µ—Ä–≤–µ—Ä–Ω–æ–π –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
SERVER_DB_CONFIG = {
    'host': '7da2c0adf39345ca39269f40.twc1.net',
    'port': 5432,
    'database': 'default_db',
    'user': 'gen_user',
    'password': '|dls1z:N7#v>vr'
}

def check_users_after_fix():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö")
    print("=" * 80)
    print(f"üìÖ –í—Ä–µ–º—è: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
    print()

    try:
        # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–µ—Ä–≤–µ—Ä–Ω–æ–π –±–∞–∑–µ
        print("üîó –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–µ—Ä–≤–µ—Ä–Ω–æ–π –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...")
        conn = psycopg2.connect(**SERVER_DB_CONFIG)
        cursor = conn.cursor()
        print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–µ—Ä–≤–µ—Ä–Ω–æ–π –±–∞–∑–µ —É—Å–ø–µ—à–Ω–æ!")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—É user
        print("\nüë• –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∞–±–ª–∏—Ü—ã user:")
        cursor.execute("SELECT COUNT(*) FROM \"user\"")
        user_count = cursor.fetchone()[0]
        print(f"üìà –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {user_count}")

        if user_count > 0:
            cursor.execute("SELECT id, email, username, is_active FROM \"user\" LIMIT 10")
            users = cursor.fetchall()
            print(f"‚úÖ –ü—Ä–∏–º–µ—Ä—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:")
            for user in users:
                print(f"  - ID: {user[0]}, Email: {user[1]}, Username: {user[2]}, Active: {user[3]}")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—É profile
        print("\nüë§ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∞–±–ª–∏—Ü—ã profile:")
        cursor.execute("SELECT COUNT(*) FROM profile")
        profile_count = cursor.fetchone()[0]
        print(f"üìà –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ—Ñ–∏–ª–µ–π: {profile_count}")

        if profile_count > 0:
            cursor.execute("SELECT id, user_id, first_name, last_name FROM profile LIMIT 10")
            profiles = cursor.fetchall()
            print(f"‚úÖ –ü—Ä–∏–º–µ—Ä—ã –ø—Ä–æ—Ñ–∏–ª–µ–π:")
            for profile in profiles:
                print(f"  - ID: {profile[0]}, User ID: {profile[1]}, Name: {profile[2]} {profile[3]}")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –∞–¥–º–∏–Ω–∞
        print("\nüîç –ü–æ–∏—Å–∫ –∞–¥–º–∏–Ω–∞:")
        cursor.execute("SELECT id, email, username, is_active FROM \"user\" WHERE email = 'admin@questcity.com'")
        admin = cursor.fetchone()
        
        if admin:
            print(f"‚úÖ –ê–¥–º–∏–Ω –Ω–∞–π–¥–µ–Ω:")
            print(f"  - ID: {admin[0]}")
            print(f"  - Email: {admin[1]}")
            print(f"  - Username: {admin[2]}")
            print(f"  - Active: {admin[3]}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–æ—Ñ–∏–ª—å –∞–¥–º–∏–Ω–∞
            cursor.execute("SELECT id, user_id, first_name, last_name FROM profile WHERE user_id = %s", (admin[0],))
            admin_profile = cursor.fetchone()
            
            if admin_profile:
                print(f"‚úÖ –ü—Ä–æ—Ñ–∏–ª—å –∞–¥–º–∏–Ω–∞ –Ω–∞–π–¥–µ–Ω:")
                print(f"  - Profile ID: {admin_profile[0]}")
                print(f"  - User ID: {admin_profile[1]}")
                print(f"  - Name: {admin_profile[2]} {admin_profile[3]}")
            else:
                print("‚ùå –ü—Ä–æ—Ñ–∏–ª—å –∞–¥–º–∏–Ω–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω")
        else:
            print("‚ùå –ê–¥–º–∏–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω")

        # –°–æ–∑–¥–∞–µ–º –∞–¥–º–∏–Ω–∞ –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
        if not admin:
            print("\nüìù –°–æ–∑–¥–∞–Ω–∏–µ –∞–¥–º–∏–Ω–∞...")
            try:
                # –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                cursor.execute("""
                    INSERT INTO "user" (email, username, hashed_password, is_active, is_superuser)
                    VALUES (%s, %s, %s, %s, %s)
                    RETURNING id
                """, ('admin@questcity.com', 'admin', '$2b$12$LQv3c1yqBWVHxkd0LHAkCOYz6TtxMQJqhN8/LewdBPj4J/HS.iK2.', True, True))
                
                user_id = cursor.fetchone()[0]
                print(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω —Å ID: {user_id}")
                
                # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å
                cursor.execute("""
                    INSERT INTO profile (user_id, first_name, last_name)
                    VALUES (%s, %s, %s)
                """, (user_id, 'Admin', 'User'))
                
                print("‚úÖ –ü—Ä–æ—Ñ–∏–ª—å –∞–¥–º–∏–Ω–∞ —Å–æ–∑–¥–∞–Ω")
                
                # –ö–æ–º–º–∏—Ç–∏–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
                conn.commit()
                print("‚úÖ –ò–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã")
                
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∞–¥–º–∏–Ω–∞: {e}")
                conn.rollback()

        cursor.close()
        conn.close()
        
        print("\n" + "=" * 80)
        print("‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞")
        
        return True

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

def main():
    success = check_users_after_fix()
    
    if not success:
        print("\n‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")

if __name__ == "__main__":
    main()
