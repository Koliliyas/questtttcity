#!/usr/bin/env python3
"""
–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ç–∞–±–ª–∏—Ü—ã user - –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏—Ö –∫–æ–ª–æ–Ω–æ–∫
"""
import psycopg2

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–µ—Ä–≤–µ—Ä–Ω–æ–π –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
SERVER_DB_CONFIG = {
    'host': '7da2c0adf39345ca39269f40.twc1.net',
    'port': 5432,
    'database': 'default_db',
    'user': 'gen_user',
    'password': '|dls1z:N7#v>vr',
    'sslmode': 'disable'
}

def fix_user_table_structure():
    """–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ç–∞–±–ª–∏—Ü—ã user"""
    print("üîß –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –°–¢–†–£–ö–¢–£–†–´ –¢–ê–ë–õ–ò–¶–´ USER")
    print("=" * 80)
    
    try:
        conn = psycopg2.connect(**SERVER_DB_CONFIG)
        conn.autocommit = True
        cursor = conn.cursor()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã user
        print("\nüìã –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ç–∞–±–ª–∏—Ü—ã user...")
        cursor.execute("""
            SELECT column_name, data_type, is_nullable 
            FROM information_schema.columns 
            WHERE table_name = 'user' 
            ORDER BY ordinal_position
        """)
        columns = cursor.fetchall()
        
        print("üìä –¢–µ–∫—É—â–∏–µ –∫–æ–ª–æ–Ω–∫–∏:")
        for col in columns:
            print(f"  - {col[0]} ({col[1]}, nullable: {col[2]})")
        
        # –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –∫–æ–ª–æ–Ω–∫–∏
        print("\nüîß –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏—Ö –∫–æ–ª–æ–Ω–æ–∫...")
        
        # –°–ø–∏—Å–æ–∫ –∫–æ–ª–æ–Ω–æ–∫, –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å
        missing_columns = [
            ("profile_id", "INTEGER", "NULL"),
            ("first_name", "VARCHAR(255)", "NULL"),
            ("last_name", "VARCHAR(255)", "NULL"),
            ("full_name", "VARCHAR(255)", "NULL"),
            ("role", "VARCHAR(50)", "NULL"),
            ("is_verified", "BOOLEAN", "DEFAULT FALSE"),
            ("can_edit_quests", "BOOLEAN", "DEFAULT FALSE"),
            ("can_lock_users", "BOOLEAN", "DEFAULT FALSE")
        ]
        
        existing_columns = [col[0] for col in columns]
        
        for col_name, col_type, nullable in missing_columns:
            if col_name not in existing_columns:
                try:
                    sql = f'ALTER TABLE "user" ADD COLUMN {col_name} {col_type} {nullable}'
                    cursor.execute(sql)
                    print(f"  ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–∞ –∫–æ–ª–æ–Ω–∫–∞ {col_name}")
                except Exception as e:
                    print(f"  ‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–æ–ª–æ–Ω–∫–∏ {col_name}: {e}")
            else:
                print(f"  ‚ö†Ô∏è –ö–æ–ª–æ–Ω–∫–∞ {col_name} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∞–¥–º–∏–Ω–∞
        print("\nüîß –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∞–¥–º–∏–Ω–∞...")
        try:
            cursor.execute('''
                UPDATE "user" 
                SET 
                    first_name = 'Admin',
                    last_name = 'User',
                    full_name = 'Admin User',
                    role = 'admin',
                    is_verified = TRUE,
                    can_edit_quests = TRUE,
                    can_lock_users = TRUE,
                    profile_id = 1
                WHERE email = 'admin@questcity.com'
            ''')
            print("  ‚úÖ –î–∞–Ω–Ω—ã–µ –∞–¥–º–∏–Ω–∞ –æ–±–Ω–æ–≤–ª–µ–Ω—ã")
        except Exception as e:
            print(f"  ‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –∞–¥–º–∏–Ω–∞: {e}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        print("\nüìã –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã...")
        cursor.execute("""
            SELECT column_name, data_type, is_nullable 
            FROM information_schema.columns 
            WHERE table_name = 'user' 
            ORDER BY ordinal_position
        """)
        updated_columns = cursor.fetchall()
        
        print("üìä –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –∫–æ–ª–æ–Ω–∫–∏:")
        for col in updated_columns:
            print(f"  - {col[0]} ({col[1]}, nullable: {col[2]})")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∞–Ω–Ω—ã–µ –∞–¥–º–∏–Ω–∞
        print("\nüìã –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∞–¥–º–∏–Ω–∞...")
        cursor.execute('SELECT id, email, username, first_name, last_name, role, profile_id FROM "user" WHERE email = %s', ("admin@questcity.com",))
        admin = cursor.fetchone()
        if admin:
            print(f"  üìã –ê–¥–º–∏–Ω: ID={admin[0]}, Email={admin[1]}, Username={admin[2]}, FirstName={admin[3]}, LastName={admin[4]}, Role={admin[5]}, ProfileID={admin[6]}")
        
        cursor.close()
        conn.close()
        print("\n‚úÖ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ç–∞–±–ª–∏—Ü—ã user –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∞!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    fix_user_table_structure()
