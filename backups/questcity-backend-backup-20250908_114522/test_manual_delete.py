#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä—É—á–Ω–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è —Å–≤—è–∑–∞–Ω–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π
"""

import requests
import json

def test_manual_delete_quest():
    """–¢–µ—Å—Ç —Ä—É—á–Ω–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è –∫–≤–µ—Å—Ç–∞ —Å —Å–≤—è–∑–∞–Ω–Ω—ã–º–∏ –∑–∞–ø–∏—Å—è–º–∏"""
    
    # –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
    BASE_URL = "http://localhost:8000/api/v1"
    QUEST_ID = 48  # ID –∫–≤–µ—Å—Ç–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è
    
    # URL –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∫–≤–µ—Å—Ç–∞
    url = f"{BASE_URL}/quests/admin/delete/{QUEST_ID}"
    
    print(f"Testing manual deletion of quest {QUEST_ID}")
    print(f"URL: {url}")
    print("This approach deletes related records manually in the code")
    print("=" * 60)
    
    try:
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º DELETE –∑–∞–ø—Ä–æ—Å –±–µ–∑ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ (–¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ—à–∏–±–∫–∏)
        response = requests.delete(url)
        
        print(f"Status: {response.status_code}")
        print(f"Response: {response.text}")
        
        if response.status_code == 401:
            print("SUCCESS: Got 401 (Unauthorized) - API endpoint exists and works")
            print("The manual deletion approach should work when authorized")
            return True
        elif response.status_code == 500:
            print("ERROR: Got 500 (Server Error) - There's still an issue")
            return False
        elif response.status_code == 404:
            print("SUCCESS: Got 404 (Not Found) - Quest doesn't exist or was already deleted")
            return True
        else:
            print(f"UNEXPECTED: Got {response.status_code}")
            return False
            
    except requests.exceptions.ConnectionError:
        print("ERROR: Cannot connect to server")
        return False
    except Exception as e:
        print(f"ERROR: {e}")
        return False

def explain_manual_approach():
    """–û–±—ä—è—Å–Ω—è–µ—Ç –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ —Ä—É—á–Ω–æ–≥–æ –ø–æ–¥—Ö–æ–¥–∞"""
    
    print("\n" + "=" * 60)
    print("MANUAL DELETION APPROACH EXPLANATION")
    print("=" * 60)
    
    print("‚úÖ ADVANTAGES:")
    print("1. No database schema changes required")
    print("2. Full control over deletion order")
    print("3. Detailed logging of each step")
    print("4. Easy to debug and modify")
    print("5. Works with existing database constraints")
    
    print("\nüìã DELETION ORDER:")
    print("1. Delete points (child records)")
    print("2. Delete merch (child records)")
    print("3. Delete reviews (child records)")
    print("4. Delete quest (parent record)")
    
    print("\nüîß IMPLEMENTATION:")
    print("- Uses raw SQL queries for direct control")
    print("- Executes in correct order to avoid FK violations")
    print("- Provides detailed logging for each step")
    print("- Handles errors gracefully")
    
    print("\nüí° WHEN TO USE:")
    print("- When you can't modify database schema")
    print("- When you need detailed control over deletion")
    print("- When you want to log each deletion step")
    print("- When you need custom deletion logic")

if __name__ == "__main__":
    print("üß™ Testing manual deletion approach...")
    
    # –û–±—ä—è—Å–Ω—è–µ–º –ø–æ–¥—Ö–æ–¥
    explain_manual_approach()
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
    success = test_manual_delete_quest()
    
    if success:
        print("\nüéâ Manual deletion approach is ready!")
    else:
        print("\nüí• Manual deletion approach needs fixing")
    
    print("ÔøΩÔøΩ Test completed.")

















