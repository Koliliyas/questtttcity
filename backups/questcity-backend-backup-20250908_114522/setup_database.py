#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö QuestCity
–°–æ–∑–¥–∞–µ—Ç —Ç–∞–±–ª–∏—Ü—ã –∏ –∑–∞–ø–æ–ª–Ω—è–µ—Ç –∏—Ö –±–∞–∑–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
"""

import psycopg2
import os
from pathlib import Path

def setup_database():
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    
    # –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
    connection_params = {
        'host': 'localhost',
        'port': 5432,
        'database': 'questcity',
        'user': 'postgres',
        'password': 'postgres'
    }
    
    try:
        print("üîç –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...")
        conn = psycopg2.connect(**connection_params)
        cursor = conn.cursor()
        
        print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ!")
        
        # –ß–∏—Ç–∞–µ–º SQL —Å–∫—Ä–∏–ø—Ç
        sql_file = Path(__file__).parent / "create_tables.sql"
        if sql_file.exists():
            print("üìñ –ß–∏—Ç–∞–µ–º SQL —Å–∫—Ä–∏–ø—Ç...")
            with open(sql_file, 'r', encoding='utf-8') as f:
                sql_script = f.read()
            
            # –í—ã–ø–æ–ª–Ω—è–µ–º SQL —Å–∫—Ä–∏–ø—Ç
            print("üöÄ –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—ã...")
            cursor.execute(sql_script)
            conn.commit()
            print("‚úÖ –¢–∞–±–ª–∏—Ü—ã —Å–æ–∑–¥–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
        else:
            print("‚ùå –§–∞–π–ª create_tables.sql –Ω–µ –Ω–∞–π–¥–µ–Ω!")
            return False
        
        # –°–æ–∑–¥–∞–µ–º –±–∞–∑–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
        print("\nüìù –°–æ–∑–¥–∞–µ–º –±–∞–∑–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ...")
        
        # –ë–∞–∑–æ–≤—ã–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
        activities = [
            "Face verification",
            "Photo taking", 
            "QR code scanning",
            "GPS location check",
            "Text input",
            "Audio recording",
            "Video recording",
            "Object detection",
            "Gesture recognition",
            "Document scan"
        ]
        
        print("  üéØ –°–æ–∑–¥–∞–µ–º –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏...")
        for i, activity_name in enumerate(activities, 1):
            cursor.execute(
                "INSERT INTO activity (id, name) VALUES (%s, %s) ON CONFLICT (id) DO NOTHING",
                (i, activity_name)
            )
            print(f"    ‚úÖ {i}: {activity_name}")
        
        # –ë–∞–∑–æ–≤—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        categories = [
            ("Adventure", "https://example.com/adventure.jpg"),
            ("Mystery", "https://example.com/mystery.jpg"),
            ("Historical", "https://example.com/historical.jpg"),
            ("Nature", "https://example.com/nature.jpg"),
            ("Urban", "https://example.com/urban.jpg"),
            ("Cultural", "https://example.com/cultural.jpg"),
            ("Educational", "https://example.com/educational.jpg"),
            ("Entertainment", "https://example.com/entertainment.jpg")
        ]
        
        print("  üè∑Ô∏è  –°–æ–∑–¥–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏...")
        for i, (category_name, image_url) in enumerate(categories, 1):
            cursor.execute(
                "INSERT INTO category (id, name, image) VALUES (%s, %s, %s) ON CONFLICT (id) DO NOTHING",
                (i, category_name, image_url)
            )
            print(f"    ‚úÖ {i}: {category_name}")
        
        # –ë–∞–∑–æ–≤—ã–µ –º–µ—Å—Ç–∞
        places = [
            "City Center",
            "Park",
            "Museum",
            "Shopping Mall",
            "Restaurant",
            "Historical Site",
            "Beach",
            "Mountain",
            "Forest",
            "University"
        ]
        
        print("  üìç –°–æ–∑–¥–∞–µ–º –º–µ—Å—Ç–∞...")
        for i, place_name in enumerate(places, 1):
            cursor.execute(
                "INSERT INTO place (id, name) VALUES (%s, %s) ON CONFLICT (id) DO NOTHING",
                (i, place_name)
            )
            print(f"    ‚úÖ {i}: {place_name}")
        
        # –ë–∞–∑–æ–≤—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã
        tools = [
            ("Rangefinder", "https://example.com/rangefinder.jpg"),
            ("QR Scanner", "https://example.com/qr-scanner.jpg"),
            ("Camera", "https://example.com/camera.jpg"),
            ("GPS Device", "https://example.com/gps.jpg"),
            ("Audio Recorder", "https://example.com/audio.jpg"),
            ("Video Camera", "https://example.com/video.jpg"),
            ("Document Scanner", "https://example.com/scanner.jpg"),
            ("Gesture Sensor", "https://example.com/gesture.jpg"),
            ("Object Detector", "https://example.com/detector.jpg"),
            ("Text Input Device", "https://example.com/text-input.jpg")
        ]
        
        print("  üîß –°–æ–∑–¥–∞–µ–º –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã...")
        for i, (tool_name, image_url) in enumerate(tools, 1):
            cursor.execute(
                "INSERT INTO tool (id, name, image) VALUES (%s, %s, %s) ON CONFLICT (id) DO NOTHING",
                (i, tool_name, image_url)
            )
            print(f"    ‚úÖ {i}: {tool_name}")
        
        # –ë–∞–∑–æ–≤—ã–µ —Ç–∏–ø—ã —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞
        vehicles = [
            "On Foot",
            "Bicycle", 
            "Car",
            "Public Transport",
            "Motorcycle",
            "Scooter"
        ]
        
        print("  üöó –°–æ–∑–¥–∞–µ–º —Ç–∏–ø—ã —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞...")
        for i, vehicle_name in enumerate(vehicles, 1):
            cursor.execute(
                "INSERT INTO vehicle (id, name) VALUES (%s, %s) ON CONFLICT (id) DO NOTHING",
                (i, vehicle_name)
            )
            print(f"    ‚úÖ {i}: {vehicle_name}")
        
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –ø—Ä–æ—Ñ–∏–ª—å
        print("  üë§ –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –ø—Ä–æ—Ñ–∏–ª—å...")
        cursor.execute(
            "INSERT INTO profile (id, instagram_username, credits) VALUES (1, 'test_user', 100) ON CONFLICT (id) DO NOTHING"
        )
        print("    ‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π –ø—Ä–æ—Ñ–∏–ª—å —Å–æ–∑–¥–∞–Ω")
        
        # –ö–æ–º–º–∏—Ç–∏–º –≤—Å–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è
        conn.commit()
        print("\n‚úÖ –í—Å–µ –±–∞–∑–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —Å–æ–∑–¥–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        print("\nüìä –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–∑–¥–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ...")
        
        cursor.execute("SELECT COUNT(*) FROM activity")
        activity_count = cursor.fetchone()[0]
        print(f"  üéØ –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç–µ–π: {activity_count}")
        
        cursor.execute("SELECT COUNT(*) FROM category")
        category_count = cursor.fetchone()[0]
        print(f"  üè∑Ô∏è  –ö–∞—Ç–µ–≥–æ—Ä–∏–π: {category_count}")
        
        cursor.execute("SELECT COUNT(*) FROM place")
        place_count = cursor.fetchone()[0]
        print(f"  üìç –ú–µ—Å—Ç: {place_count}")
        
        cursor.execute("SELECT COUNT(*) FROM tool")
        tool_count = cursor.fetchone()[0]
        print(f"  üîß –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤: {tool_count}")
        
        cursor.execute("SELECT COUNT(*) FROM vehicle")
        vehicle_count = cursor.fetchone()[0]
        print(f"  üöó –¢–∏–ø–æ–≤ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞: {vehicle_count}")
        
        cursor.close()
        conn.close()
        
        print("\nüéâ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
        print("–¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏ —Å–æ–∑–¥–∞–≤–∞—Ç—å –∫–≤–µ—Å—Ç—ã!")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: {e}")
        if 'conn' in locals():
            conn.rollback()
            conn.close()
        return False

if __name__ == "__main__":
    print("üéØ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö QuestCity...")
    print("=" * 60)
    
    success = setup_database()
    
    if success:
        print("\n" + "=" * 60)
        print("üéâ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
    else:
        print("\n" + "=" * 60)
        print("‚ùå –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–∏–ª–∞—Å—å —Å –æ—à–∏–±–∫–∞–º–∏!")
        exit(1)
