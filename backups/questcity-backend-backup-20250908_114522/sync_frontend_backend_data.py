#!/usr/bin/env python3
"""
–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞ –∏ –±—ç–∫–µ–Ω–¥–∞ –¥–ª—è activity –∏ tool
"""

import asyncio
import asyncpg
import os
from dotenv import load_dotenv

load_dotenv()

async def sync_frontend_backend_data():
    """–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ activity –∏ tool —Å —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–æ–º"""
    
    database_user = os.getenv("DATABASE_USERNAME", "postgres")
    database_password = os.getenv("DATABASE_PASSWORD", "postgres")
    database_host = os.getenv("DATABASE_HOST", "localhost")
    database_port = os.getenv("DATABASE_PORT", "5432")
    database_name = os.getenv("DATABASE_NAME", "questcity_db")
    
    database_url = f"postgresql://{database_user}:{database_password}@{database_host}:{database_port}/{database_name}"
    
    print(f"üîÑ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞ –∏ –±—ç–∫–µ–Ω–¥–∞")
    print(f"üîó –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ: {database_host}:{database_port}/{database_name}")
    print("=" * 60)
    
    try:
        conn = await asyncpg.connect(database_url)
        
        # –û—á–∏—â–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –¥–∞–Ω–Ω—ã–µ
        print("\nüóëÔ∏è  –û—á–∏—â–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –¥–∞–Ω–Ω—ã–µ...")
        await conn.execute("DELETE FROM tool")
        await conn.execute("DELETE FROM activity")
        
        # –°–æ–∑–¥–∞–µ–º activity –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–æ–º
        print("\nüìã –°–æ–∑–¥–∞–µ–º activity –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–æ–º:")
        activities = [
            "Catch a ghost",           # ID 1
            "Take a photo",            # ID 2
            "Download the file",       # ID 3
            "Scan Qr-code",            # ID 4
            "Enter the code",          # ID 5
            "Enter the word",          # ID 6
            "Pick up an artifact",     # ID 7
        ]
        
        for i, activity_name in enumerate(activities, 1):
            await conn.execute(
                "INSERT INTO activity (id, name) VALUES ($1, $2)",
                i, activity_name
            )
            print(f"  ‚úÖ ID {i}: {activity_name}")
        
        # –°–æ–∑–¥–∞–µ–º tool –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–æ–º
        print("\nüìã –°–æ–∑–¥–∞–µ–º tool –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–æ–º:")
        tools = [
            ("None", "none.jpg"),                           # ID 1
            ("Screen illustration descriptor", "screen.jpg"), # ID 2
            ("Beeping radar", "beeping_radar.jpg"),         # ID 3
            ("Orbital radar", "orbital_radar.jpg"),         # ID 4
            ("Mile orbital radar", "mile_orbital.jpg"),     # ID 5
            ("Unlim orbital radar", "unlim_orbital.jpg"),   # ID 6
            ("Target compass", "target_compass.jpg"),       # ID 7
            ("Rangefinder", "rangefinder.jpg"),             # ID 8
            ("Rangefinder unlim", "rangefinder_unlim.jpg"), # ID 9
            ("Echolocation screen", "echolocation.jpg"),    # ID 10
            ("QR scanner", "qr_scanner.jpg"),               # ID 11
            ("Camera tool", "camera_tool.jpg"),             # ID 12
            ("Word locker", "word_locker.jpg"),             # ID 13
        ]
        
        for i, (tool_name, tool_image) in enumerate(tools, 1):
            await conn.execute(
                "INSERT INTO tool (id, name, image) VALUES ($1, $2, $3)",
                i, tool_name, tool_image
            )
            print(f"  ‚úÖ ID {i}: {tool_name} (image: {tool_image})")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        print("\nüîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç:")
        
        activities_result = await conn.fetch("SELECT id, name FROM activity ORDER BY id")
        print(f"  üìä Activity: {len(activities_result)} –∑–∞–ø–∏—Å–µ–π")
        for activity in activities_result:
            print(f"    - ID {activity['id']}: {activity['name']}")
        
        tools_result = await conn.fetch("SELECT id, name, image FROM tool ORDER BY id")
        print(f"  üìä Tool: {len(tools_result)} –∑–∞–ø–∏—Å–µ–π")
        for tool in tools_result:
            print(f"    - ID {tool['id']}: {tool['name']} (image: {tool['image']})")
        
        await conn.close()
        print("\nüéâ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏: {e}")

if __name__ == "__main__":
    asyncio.run(sync_frontend_backend_data())
