#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã API –¥–ª—è –æ–±—ã—á–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –∞–¥–º–∏–Ω–∞
"""

import requests
import json

BASE_URL = "http://localhost:8000"

def get_testuser_token():
    """–ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –¥–ª—è testuser"""
    try:
        login_data = {
            "login": "testuser@questcity.com",
            "password": "password123"
        }
        
        response = requests.post(f"{BASE_URL}/api/v1/auth/login", data=login_data)
        if response.status_code == 200:
            result = response.json()
            return result.get("accessToken")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ª–æ–≥–∏–Ω–∞ testuser: {response.status_code} - {response.text}")
            return None
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ç–æ–∫–µ–Ω–∞ testuser: {e}")
        return None

def get_admin_token():
    """–ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ —Ñ–∞–π–ª–∞ .admin_token"""
    try:
        with open('.admin_token', 'r') as f:
            return f.read().strip()
    except FileNotFoundError:
        print("‚ùå –§–∞–π–ª .admin_token –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return None
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —Ç–æ–∫–µ–Ω–∞: {e}")
        return None

def test_quest_comparison():
    """–°—Ä–∞–≤–Ω–∏–≤–∞–µ–º —Ä–∞–±–æ—Ç—É API –¥–ª—è –æ–±—ã—á–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –∞–¥–º–∏–Ω–∞"""
    
    print("üß™ –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã API –¥–ª—è –æ–±—ã—á–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –∞–¥–º–∏–Ω–∞")
    print("=" * 70)
    
    # –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω—ã
    testuser_token = get_testuser_token()
    admin_token = get_admin_token()
    
    if not testuser_token:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ç–æ–∫–µ–Ω testuser")
        return
    
    if not admin_token:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ç–æ–∫–µ–Ω admin")
        return
    
    print(f"‚úÖ –¢–æ–∫–µ–Ω—ã –ø–æ–ª—É—á–µ–Ω—ã:")
    print(f"   - testuser: {testuser_token[:20]}...")
    print(f"   - admin: {admin_token[:20]}...")
    print()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã
    endpoints_to_test = [
        {
            "name": "–ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –∫–≤–µ—Å—Ç–æ–≤",
            "url": f"{BASE_URL}/api/v1/quests/",
            "method": "GET"
        },
        {
            "name": "–ê–¥–º–∏–Ω—Å–∫–∏–π —Å–ø–∏—Å–æ–∫ –∫–≤–µ—Å—Ç–æ–≤",
            "url": f"{BASE_URL}/api/v1/quests/admin/list",
            "method": "GET"
        },
        {
            "name": "–î–µ—Ç–∞–ª–∏ –∫–≤–µ—Å—Ç–∞",
            "url": f"{BASE_URL}/api/v1/quests/3",
            "method": "GET"
        },
        {
            "name": "–ê–¥–º–∏–Ω—Å–∫–∏–µ –¥–µ—Ç–∞–ª–∏ –∫–≤–µ—Å—Ç–∞",
            "url": f"{BASE_URL}/api/v1/quests/admin/3",
            "method": "GET"
        },
        {
            "name": "–ü—Ä–æ—Å—Ç–æ–π —ç–Ω–¥–ø–æ–∏–Ω—Ç –∫–≤–µ—Å—Ç–∞",
            "url": f"{BASE_URL}/api/v1/quests/get-quest/3",
            "method": "GET"
        }
    ]
    
    for endpoint in endpoints_to_test:
        print(f"üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º: {endpoint['name']}")
        print(f"   URL: {endpoint['url']}")
        print()
        
        # –¢–µ—Å—Ç —Å –æ–±—ã—á–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
        print(f"   üë§ –û–±—ã—á–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å (testuser):")
        try:
            headers = {
                "Authorization": f"Bearer {testuser_token}",
                "Content-Type": "application/json"
            }
            
            if endpoint['method'] == 'GET':
                response = requests.get(endpoint['url'], headers=headers, timeout=10)
            else:
                response = requests.post(endpoint['url'], headers=headers, timeout=10)
            
            print(f"      –°—Ç–∞—Ç—É—Å: {response.status_code}")
            
            if response.status_code == 200:
                try:
                    data = response.json()
                    if isinstance(data, list):
                        print(f"      –†–µ–∑—É–ª—å—Ç–∞—Ç: —Å–ø–∏—Å–æ–∫ –∏–∑ {len(data)} —ç–ª–µ–º–µ–Ω—Ç–æ–≤")
                        if len(data) > 0:
                            print(f"      –ü–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç: {data[0].get('name', data[0].get('title', 'N/A'))}")
                    elif isinstance(data, dict):
                        print(f"      –†–µ–∑—É–ª—å—Ç–∞—Ç: –æ–±—ä–µ–∫—Ç —Å –∫–ª—é—á–∞–º–∏: {list(data.keys())}")
                        if 'name' in data or 'title' in data:
                            name = data.get('name', data.get('title', 'N/A'))
                            print(f"      –ù–∞–∑–≤–∞–Ω–∏–µ –∫–≤–µ—Å—Ç–∞: {name}")
                except:
                    print(f"      –†–µ–∑—É–ª—å—Ç–∞—Ç: {response.text[:50]}...")
            else:
                print(f"      –û—à–∏–±–∫–∞: {response.text}")
                
        except Exception as e:
            print(f"      ‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ: {e}")
        
        print()
        
        # –¢–µ—Å—Ç —Å –∞–¥–º–∏–Ω–æ–º
        print(f"   üëë –ê–¥–º–∏–Ω:")
        try:
            headers = {
                "Authorization": f"Bearer {admin_token}",
                "Content-Type": "application/json"
            }
            
            if endpoint['method'] == 'GET':
                response = requests.get(endpoint['url'], headers=headers, timeout=10)
            else:
                response = requests.post(endpoint['url'], headers=headers, timeout=10)
            
            print(f"      –°—Ç–∞—Ç—É—Å: {response.status_code}")
            
            if response.status_code == 200:
                try:
                    data = response.json()
                    if isinstance(data, list):
                        print(f"      –†–µ–∑—É–ª—å—Ç–∞—Ç: —Å–ø–∏—Å–æ–∫ –∏–∑ {len(data)} —ç–ª–µ–º–µ–Ω—Ç–æ–≤")
                        if len(data) > 0:
                            print(f"      –ü–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç: {data[0].get('name', data[0].get('title', 'N/A'))}")
                    elif isinstance(data, dict):
                        print(f"      –†–µ–∑—É–ª—å—Ç–∞—Ç: –æ–±—ä–µ–∫—Ç —Å –∫–ª—é—á–∞–º–∏: {list(data.keys())}")
                        if 'name' in data or 'title' in data:
                            name = data.get('name', data.get('title', 'N/A'))
                            print(f"      –ù–∞–∑–≤–∞–Ω–∏–µ –∫–≤–µ—Å—Ç–∞: {name}")
                except:
                    print(f"      –†–µ–∑—É–ª—å—Ç–∞—Ç: {response.text[:50]}...")
            else:
                print(f"      –û—à–∏–±–∫–∞: {response.text}")
                
        except Exception as e:
            print(f"      ‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ: {e}")
        
        print("-" * 70)
        print()

if __name__ == "__main__":
    test_quest_comparison()
