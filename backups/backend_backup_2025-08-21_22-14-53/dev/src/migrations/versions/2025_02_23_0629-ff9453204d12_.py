"""empty message

Revision ID: ff9453204d12
Revises: dce33058165d
Create Date: 2025-02-23 06:29:25.293091

"""
from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = 'ff9453204d12'
down_revision: Union[str, None] = 'dce33058165d'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('activity',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=32), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_activity')),
    sa.UniqueConstraint('name', name=op.f('uq_activity_name'))
    )
    op.create_table('category',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=16), nullable=False),
    sa.Column('image', sa.String(length=1024), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', now())"), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', now())"), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_category')),
    sa.UniqueConstraint('name', name=op.f('uq_category_name'))
    )
    op.create_table('place',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=16), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_place')),
    sa.UniqueConstraint('name', name=op.f('uq_place_name'))
    )
    op.create_table('tool',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=32), nullable=False),
    sa.Column('image', sa.String(length=1024), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_tool')),
    sa.UniqueConstraint('name', name=op.f('uq_tool_name'))
    )
    op.create_table('vehicle',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=16), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_vehicle')),
    sa.UniqueConstraint('name', name=op.f('uq_vehicle_name'))
    )
    op.create_table('quest',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=32), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('image', sa.String(length=1024), nullable=False),
    sa.Column('mentor_preference', sa.String(length=1024), nullable=False),
    sa.Column('auto_accrual', sa.Boolean(), nullable=False),
    sa.Column('cost', sa.Integer(), nullable=False),
    sa.Column('reward', sa.Integer(), nullable=False),
    sa.Column('category_id', sa.Integer(), nullable=False),
    sa.Column('group', sa.Enum('TWO', 'THREE', 'FOUR', name='grouptype'), nullable=True),
    sa.Column('vehicle_id', sa.Integer(), nullable=False),
    sa.Column('is_subscription', sa.Boolean(), nullable=False),
    sa.Column('pay_extra', sa.Integer(), nullable=False),
    sa.Column('timeframe', sa.Enum('ONE_HOUR', 'THREE_HOURS', 'TEN_HOURS', 'DAY', name='timeframe'), nullable=True),
    sa.Column('level', sa.Enum('EASY', 'MIDDLE', 'HARD', name='level'), nullable=False),
    sa.Column('milage', sa.Enum('UP_TO_TEN', 'UP_TO_THIRTY', 'UP_TO_HUNDRED', 'MORE_THAN_HUNDRED', name='milage'), nullable=False),
    sa.Column('place_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', now())"), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', now())"), nullable=False),
    sa.ForeignKeyConstraint(['category_id'], ['category.id'], name=op.f('fk_quest_category_id_category')),
    sa.ForeignKeyConstraint(['place_id'], ['place.id'], name=op.f('fk_quest_place_id_place')),
    sa.ForeignKeyConstraint(['vehicle_id'], ['vehicle.id'], name=op.f('fk_quest_vehicle_id_vehicle')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_quest')),
    sa.UniqueConstraint('name', name=op.f('uq_quest_name'))
    )
    op.create_table('merch',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('price', sa.Float(), nullable=False),
    sa.Column('image', sa.String(length=1024), nullable=False),
    sa.Column('quest_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['quest_id'], ['quest.id'], name=op.f('fk_merch_quest_id_quest')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_merch'))
    )
    op.create_table('point',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name_of_location', sa.String(length=32), nullable=False),
    sa.Column('order', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('type_id', sa.Integer(), nullable=False),
    sa.Column('type_photo', sa.Enum('FACE_VERIFICATION', 'DIRECTION_CHECK', 'MATCHING', name='takephoto'), nullable=True),
    sa.Column('type_code', sa.Integer(), nullable=True),
    sa.Column('type_word', sa.String(length=32), nullable=True),
    sa.Column('tool_id', sa.Integer(), nullable=True),
    sa.Column('file', sa.String(length=1024), nullable=True),
    sa.Column('is_divide', sa.Boolean(), nullable=True),
    sa.Column('quest_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['quest_id'], ['quest.id'], name=op.f('fk_point_quest_id_quest')),
    sa.ForeignKeyConstraint(['tool_id'], ['tool.id'], name=op.f('fk_point_tool_id_tool')),
    sa.ForeignKeyConstraint(['type_id'], ['activity.id'], name=op.f('fk_point_type_id_activity')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_point'))
    )
    op.create_table('review',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('review', sa.String(), nullable=False),
    sa.Column('rating', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', now())"), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', now())"), nullable=False),
    sa.Column('owner_id', sa.Integer(), nullable=False),
    sa.Column('quest_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['owner_id'], ['profile.id'], name=op.f('fk_review_owner_id_profile')),
    sa.ForeignKeyConstraint(['quest_id'], ['quest.id'], name=op.f('fk_review_quest_id_quest')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_review'))
    )
    op.create_table('place_settings',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('longitude', sa.Float(), nullable=False),
    sa.Column('latitude', sa.Float(), nullable=False),
    sa.Column('detections_radius', sa.Float(), nullable=False),
    sa.Column('height', sa.Float(), nullable=False),
    sa.Column('random_occurrence', sa.Float(), nullable=True),
    sa.Column('interaction_inaccuracy', sa.Float(), nullable=False),
    sa.Column('part', sa.Integer(), nullable=True),
    sa.Column('point_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['point_id'], ['point.id'], name=op.f('fk_place_settings_point_id_point')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_place_settings'))
    )
    op.add_column('profile', sa.Column('instagram_username', sa.String(length=1024), nullable=False))
    op.add_column('profile', sa.Column('credits', sa.Integer(), nullable=False))
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('profile', 'credits')
    op.drop_column('profile', 'instagram_username')
    op.drop_table('place_settings')
    op.drop_table('review')
    op.drop_table('point')
    op.drop_table('merch')
    op.drop_table('quest')
    op.drop_table('vehicle')
    op.drop_table('tool')
    op.drop_table('place')
    op.drop_table('category')
    op.drop_table('activity')
    # ### end Alembic commands ###
