"""empty message

Revision ID: 47212c3719c8
Revises: 2950439fc9aa
Create Date: 2025-03-12 16:55:17.146574

"""
from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = '47212c3719c8'
down_revision: Union[str, None] = '2950439fc9aa'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('favorite',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('quest_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', now())"), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', now())"), nullable=False),
    sa.ForeignKeyConstraint(['quest_id'], ['quest.id'], name=op.f('fk_favorite_quest_id_quest'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('fk_favorite_user_id_user'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_favorite')),
    sa.UniqueConstraint('user_id', 'quest_id', name='unique_favorite')
    )
    op.create_table('review_response',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('text', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', now())"), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', now())"), nullable=False),
    sa.Column('review_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['review_id'], ['review.id'], name=op.f('fk_review_response_review_id_review'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('fk_review_response_user_id_user')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_review_response')),
    sa.UniqueConstraint('review_id', name='uq_response_per_review'),
    sa.UniqueConstraint('review_id', name=op.f('uq_review_response_review_id'))
    )
    op.add_column('review', sa.Column('text', sa.String(), nullable=False))
    op.add_column('review', sa.Column('user_id', sa.UUID(), nullable=False))
    op.create_unique_constraint('uq_user_quest_review', 'review', ['user_id', 'quest_id'])
    op.drop_constraint('fk_review_owner_id_profile', 'review', type_='foreignkey')
    op.create_foreign_key(op.f('fk_review_user_id_user'), 'review', 'user', ['user_id'], ['id'])
    op.drop_column('review', 'review')
    op.drop_column('review', 'owner_id')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('review', sa.Column('owner_id', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('review', sa.Column('review', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.drop_constraint(op.f('fk_review_user_id_user'), 'review', type_='foreignkey')
    op.create_foreign_key('fk_review_owner_id_profile', 'review', 'profile', ['owner_id'], ['id'])
    op.drop_constraint('uq_user_quest_review', 'review', type_='unique')
    op.drop_column('review', 'user_id')
    op.drop_column('review', 'text')
    op.drop_table('review_response')
    op.drop_table('favorite')
    # ### end Alembic commands ###
