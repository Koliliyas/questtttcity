"""empty message

Revision ID: 67b3912d505f
Revises: a3ac9680766b
Create Date: 2024-11-25 13:26:57.613631

"""
from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = '67b3912d505f'
down_revision: Union[str, None] = 'a3ac9680766b'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('email_verification_code',
    sa.Column('code', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=30), nullable=False),
    sa.Column('optional_data', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', now())"), nullable=False),
    sa.PrimaryKeyConstraint('code', 'email', name=op.f('pk_email_verification_code'))
    )
    op.create_table('profile',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('avatar_url', sa.String(length=1024), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_profile'))
    )
    op.create_table('reset_password_token',
    sa.Column('id', sa.String(length=45), nullable=False),
    sa.Column('email', sa.String(length=30), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', now())"), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_reset_password_token'))
    )
    op.create_table('unlock_request',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('reason', sa.String(length=128), nullable=False),
    sa.Column('unlock_request_status_enum', sa.Enum('pending', 'approved', 'rejected', name='unlockrequeststatus'), nullable=False),
    sa.Column('message', sa.String(length=1024), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', now())"), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', now())"), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_unlock_request'))
    )
    op.create_table('user',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('username', sa.String(length=15), nullable=False),
    sa.Column('first_name', sa.String(length=128), nullable=False),
    sa.Column('last_name', sa.String(length=128), nullable=False),
    sa.Column('full_name', sa.String(length=257), sa.Computed("first_name || ' ' || last_name", persisted=True), nullable=False),
    sa.Column('password', sa.String(length=1024), nullable=False),
    sa.Column('email', sa.String(length=30), nullable=False),
    sa.Column('profile_id', sa.Integer(), nullable=False),
    sa.Column('role', sa.Integer(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_verified', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', now())"), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', now())"), nullable=False),
    sa.ForeignKeyConstraint(['profile_id'], ['profile.id'], name=op.f('fk_user_profile_id_profile'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_user')),
    sa.UniqueConstraint('profile_id', name=op.f('uq_user_profile_id'))
    )
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=True)
    op.create_index(op.f('ix_user_username'), 'user', ['username'], unique=True)
    op.create_index('user_username_first_name_last_name_trgm_idx', 'user', [sa.text('username gin_trgm_ops'), sa.text('full_name gin_trgm_ops')], unique=False, postgresql_using='gin')
    op.create_table('refresh_token',
    sa.Column('id', sa.String(length=45), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', now())"), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('fk_refresh_token_user_id_user'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_refresh_token'))
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('refresh_token')
    op.drop_index('user_username_first_name_last_name_trgm_idx', table_name='user', postgresql_using='gin')
    op.drop_index(op.f('ix_user_username'), table_name='user')
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.drop_table('user')
    op.drop_table('unlock_request')
    op.drop_table('reset_password_token')
    op.drop_table('profile')
    op.drop_table('email_verification_code')
    # ### end Alembic commands ###
