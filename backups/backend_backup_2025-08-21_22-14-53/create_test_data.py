#!/usr/bin/env python3
"""
–°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —É–¥–∞–ª–µ–Ω–∏—è –∫–≤–µ—Å—Ç–æ–≤
"""

import asyncio
import asyncpg
import os
from dotenv import load_dotenv

load_dotenv()

async def create_test_data():
    """–°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ"""
    
    database_user = os.getenv("DATABASE_USERNAME", "postgres")
    database_password = os.getenv("DATABASE_PASSWORD", "postgres")
    database_host = os.getenv("DATABASE_HOST", "localhost")
    database_port = os.getenv("DATABASE_PORT", "5432")
    database_name = os.getenv("DATABASE_NAME", "questcity_db")
    
    database_url = f"postgresql://{database_user}:{database_password}@{database_host}:{database_port}/{database_name}"
    
    print(f"üß™ –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ")
    print("=" * 60)
    
    try:
        conn = await asyncpg.connect(database_url)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –¥–∞–Ω–Ω—ã–µ
        activity_count = await conn.fetchval("SELECT COUNT(*) FROM activity")
        tool_count = await conn.fetchval("SELECT COUNT(*) FROM tool")
        
        print(f"üìä –¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ:")
        print(f"  - activity: {activity_count} –∑–∞–ø–∏—Å–µ–π")
        print(f"  - tool: {tool_count} –∑–∞–ø–∏—Å–µ–π")
        
        # –°–æ–∑–¥–∞–µ–º activity –µ—Å–ª–∏ –Ω–µ—Ç
        if activity_count == 0:
            await conn.execute("""
                INSERT INTO activity (name) VALUES 
                ('–¢–µ—Å—Ç–æ–≤–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å 1'),
                ('–¢–µ—Å—Ç–æ–≤–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å 2'),
                ('–¢–µ—Å—Ç–æ–≤–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å 3')
            """)
            print("‚úÖ –°–æ–∑–¥–∞–Ω—ã —Ç–µ—Å—Ç–æ–≤—ã–µ –∑–∞–ø–∏—Å–∏ –≤ —Ç–∞–±–ª–∏—Ü–µ activity")
        
        # –°–æ–∑–¥–∞–µ–º tool –µ—Å–ª–∏ –Ω–µ—Ç
        if tool_count == 0:
            await conn.execute("""
                INSERT INTO tool (name, image) VALUES 
                ('–¢–µ—Å—Ç–æ–≤—ã–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç 1', 'tool1.jpg'),
                ('–¢–µ—Å—Ç–æ–≤—ã–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç 2', 'tool2.jpg'),
                ('–¢–µ—Å—Ç–æ–≤—ã–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç 3', 'tool3.jpg')
            """)
            print("‚úÖ –°–æ–∑–¥–∞–Ω—ã —Ç–µ—Å—Ç–æ–≤—ã–µ –∑–∞–ø–∏—Å–∏ –≤ —Ç–∞–±–ª–∏—Ü–µ tool")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        activity_count = await conn.fetchval("SELECT COUNT(*) FROM activity")
        tool_count = await conn.fetchval("SELECT COUNT(*) FROM tool")
        
        print(f"\nüìä –ò—Ç–æ–≥–æ–≤–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ:")
        print(f"  - activity: {activity_count} –∑–∞–ø–∏—Å–µ–π")
        print(f"  - tool: {tool_count} –∑–∞–ø–∏—Å–µ–π")
        
        await conn.close()
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö: {e}")

if __name__ == "__main__":
    asyncio.run(create_test_data())
