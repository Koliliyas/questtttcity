#!/usr/bin/env python3
"""
–£–¥–∞–ª–µ–Ω–∏–µ –∫–≤–µ—Å—Ç–∞ —Å ID 77 —Ä–∞–∑–Ω—ã–º–∏ —Å–ø–æ—Å–æ–±–∞–º–∏
"""

import asyncio
import asyncpg
import os
import requests
from dotenv import load_dotenv

load_dotenv()

async def delete_quest_77_direct_sql():
    """–£–¥–∞–ª–µ–Ω–∏–µ –∫–≤–µ—Å—Ç–∞ 77 –Ω–∞–ø—Ä—è–º—É—é —á–µ—Ä–µ–∑ SQL"""
    
    # –ü–æ–ª—É—á–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
    database_user = os.getenv("DATABASE_USERNAME", "postgres")
    database_password = os.getenv("DATABASE_PASSWORD", "postgres")
    database_host = os.getenv("DATABASE_HOST", "localhost")
    database_port = os.getenv("DATABASE_PORT", "5432")
    database_name = os.getenv("DATABASE_NAME", "questcity_db")
    
    database_url = f"postgresql://{database_user}:{database_password}@{database_host}:{database_port}/{database_name}"
    
    print(f"üóëÔ∏è  –£–¥–∞–ª—è–µ–º –∫–≤–µ—Å—Ç 77 –Ω–∞–ø—Ä—è–º—É—é —á–µ—Ä–µ–∑ SQL")
    print(f"üîó –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ: {database_host}:{database_port}/{database_name}")
    print("=" * 60)
    
    try:
        # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        conn = await asyncpg.connect(database_url)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –∫–≤–µ—Å—Ç–∞
        quest_check = await conn.fetchrow("SELECT id, name FROM quest WHERE id = 77")
        if not quest_check:
            print("‚ùå –ö–≤–µ—Å—Ç —Å ID 77 –Ω–µ –Ω–∞–π–¥–µ–Ω")
            await conn.close()
            return False
        
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω –∫–≤–µ—Å—Ç: {quest_check['name']}")
        
        # –ù–∞—á–∏–Ω–∞–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é
        async with conn.transaction():
            print("üîÑ –ù–∞—á–∏–Ω–∞–µ–º —É–¥–∞–ª–µ–Ω–∏–µ —Å–≤—è–∑–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö...")
            
            # 1. –ü–æ–ª—É—á–∞–µ–º ID —Ç–æ—á–µ–∫ –∫–≤–µ—Å—Ç–∞
            points = await conn.fetch("SELECT id FROM point WHERE quest_id = 77")
            point_ids = [point['id'] for point in points]
            print(f"  üìç –ù–∞–π–¥–µ–Ω–æ —Ç–æ—á–µ–∫: {len(point_ids)}")
            
            if point_ids:
                # 2. –£–¥–∞–ª—è–µ–º place_settings –¥–ª—è –≤—Å–µ—Ö —Ç–æ—á–µ–∫ –∫–≤–µ—Å—Ç–∞
                place_settings_deleted = await conn.execute(
                    "DELETE FROM place_settings WHERE point_id = ANY($1)", 
                    point_ids
                )
                print(f"  ‚úÖ –£–¥–∞–ª–µ–Ω–æ place_settings: {place_settings_deleted.split()[-1] if place_settings_deleted else '0'}")
            
            # 3. –£–¥–∞–ª—è–µ–º —Ç–æ—á–∫–∏ –∫–≤–µ—Å—Ç–∞
            points_deleted = await conn.execute("DELETE FROM point WHERE quest_id = 77")
            print(f"  ‚úÖ –£–¥–∞–ª–µ–Ω–æ —Ç–æ—á–µ–∫: {points_deleted.split()[-1] if points_deleted else '0'}")
            
            # 4. –£–¥–∞–ª—è–µ–º –º–µ—Ä—á –∫–≤–µ—Å—Ç–∞
            merch_deleted = await conn.execute("DELETE FROM merch WHERE quest_id = 77")
            print(f"  ‚úÖ –£–¥–∞–ª–µ–Ω–æ –º–µ—Ä—á–∞: {merch_deleted.split()[-1] if merch_deleted else '0'}")
            
            # 5. –£–¥–∞–ª—è–µ–º –æ—Ç–∑—ã–≤—ã –∫–≤–µ—Å—Ç–∞
            reviews_deleted = await conn.execute("DELETE FROM review WHERE quest_id = 77")
            print(f"  ‚úÖ –£–¥–∞–ª–µ–Ω–æ –æ—Ç–∑—ã–≤–æ–≤: {reviews_deleted.split()[-1] if reviews_deleted else '0'}")
            
            # 6. –£–¥–∞–ª—è–µ–º —Å–∞–º –∫–≤–µ—Å—Ç
            quest_deleted = await conn.execute("DELETE FROM quest WHERE id = 77")
            print(f"  ‚úÖ –£–¥–∞–ª–µ–Ω –∫–≤–µ—Å—Ç: {quest_deleted.split()[-1] if quest_deleted else '0'}")
        
        await conn.close()
        print("‚úÖ –ö–≤–µ—Å—Ç 77 –∏ –≤—Å–µ —Å–≤—è–∑–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω—ã!")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —á–µ—Ä–µ–∑ SQL: {e}")
        return False

def delete_quest_77_api():
    """–£–¥–∞–ª–µ–Ω–∏–µ –∫–≤–µ—Å—Ç–∞ 77 —á–µ—Ä–µ–∑ API (–±–µ–∑ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –¥–ª—è —Ç–µ—Å—Ç–∞)"""
    
    BASE_URL = "http://localhost:8000/api/v1"
    QUEST_ID = 77
    
    print(f"\nüåê –ü—Ä–æ–±—É–µ–º —É–¥–∞–ª–∏—Ç—å –∫–≤–µ—Å—Ç 77 —á–µ—Ä–µ–∑ API")
    print(f"üì° URL: {BASE_URL}/quests/admin/delete/{QUEST_ID}")
    print("=" * 60)
    
    try:
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º DELETE –∑–∞–ø—Ä–æ—Å –±–µ–∑ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
        response = requests.delete(f"{BASE_URL}/quests/admin/delete/{QUEST_ID}")
        
        print(f"Status: {response.status_code}")
        print(f"Response: {response.text}")
        
        if response.status_code == 200:
            print("‚úÖ SUCCESS: –ö–≤–µ—Å—Ç —É–¥–∞–ª–µ–Ω —á–µ—Ä–µ–∑ API!")
            return True
        elif response.status_code == 401:
            print("‚ö†Ô∏è  Got 401 (Unauthorized) - API endpoint works, but needs auth")
            return False
        elif response.status_code == 404:
            print("‚ùå Got 404 (Not Found) - API endpoint not found")
            return False
        else:
            print(f"‚ö†Ô∏è  UNEXPECTED: Got {response.status_code}")
            return False
            
    except requests.exceptions.ConnectionError:
        print("‚ùå ERROR: Cannot connect to server")
        return False
    except Exception as e:
        print(f"‚ùå ERROR: {e}")
        return False

async def check_quest_77_exists():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –∫–≤–µ—Å—Ç 77"""
    
    database_user = os.getenv("DATABASE_USERNAME", "postgres")
    database_password = os.getenv("DATABASE_PASSWORD", "postgres")
    database_host = os.getenv("DATABASE_HOST", "localhost")
    database_port = os.getenv("DATABASE_PORT", "5432")
    database_name = os.getenv("DATABASE_NAME", "questcity_db")
    
    database_url = f"postgresql://{database_user}:{database_password}@{database_host}:{database_port}/{database_name}"
    
    try:
        conn = await asyncpg.connect(database_url)
        quest = await conn.fetchrow("SELECT id, name FROM quest WHERE id = 77")
        await conn.close()
        
        if quest:
            print(f"‚úÖ –ö–≤–µ—Å—Ç 77 —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {quest['name']}")
            return True
        else:
            print("‚ùå –ö–≤–µ—Å—Ç 77 –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ: {e}")
        return False

async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è - —É–¥–∞–ª—è–µ–º –∫–≤–µ—Å—Ç 77 –¥–æ —É—Å–ø–µ—Ö–∞"""
    
    print("üóëÔ∏è  –£–î–ê–õ–ï–ù–ò–ï –ö–í–ï–°–¢–ê 77")
    print("=" * 60)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –∫–≤–µ—Å—Ç–∞
    if not await check_quest_77_exists():
        print("‚ùå –ö–≤–µ—Å—Ç 77 –Ω–µ –Ω–∞–π–¥–µ–Ω, –Ω–µ—á–µ–≥–æ —É–¥–∞–ª—è—Ç—å")
        return
    
    print("\nüéØ –ù–∞—á–∏–Ω–∞–µ–º –ø–æ–ø—ã—Ç–∫–∏ —É–¥–∞–ª–µ–Ω–∏—è...")
    
    # –ü–æ–ø—ã—Ç–∫–∞ 1: –ß–µ—Ä–µ–∑ API (—Å–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–µ—Ç –∏–∑-–∑–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏)
    print("\nüìã –ü–æ–ø—ã—Ç–∫–∞ 1: –£–¥–∞–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ API")
    if delete_quest_77_api():
        print("üéâ –£–°–ü–ï–•! –ö–≤–µ—Å—Ç —É–¥–∞–ª–µ–Ω —á–µ—Ä–µ–∑ API")
        return
    
    # –ü–æ–ø—ã—Ç–∫–∞ 2: –ù–∞–ø—Ä—è–º—É—é —á–µ—Ä–µ–∑ SQL
    print("\nüìã –ü–æ–ø—ã—Ç–∫–∞ 2: –£–¥–∞–ª–µ–Ω–∏–µ –Ω–∞–ø—Ä—è–º—É—é —á–µ—Ä–µ–∑ SQL")
    if await delete_quest_77_direct_sql():
        print("üéâ –£–°–ü–ï–•! –ö–≤–µ—Å—Ç —É–¥–∞–ª–µ–Ω —á–µ—Ä–µ–∑ SQL")
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    print("\nüîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç...")
    if not await check_quest_77_exists():
        print("üéâ –£–°–ü–ï–•! –ö–≤–µ—Å—Ç 77 –±–æ–ª—å—à–µ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
    else:
        print("‚ùå –ù–ï–£–î–ê–ß–ê: –ö–≤–µ—Å—Ç 77 –≤—Å–µ –µ—â–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")

if __name__ == "__main__":
    asyncio.run(main())
