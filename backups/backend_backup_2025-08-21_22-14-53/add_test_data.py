#!/usr/bin/env python3
import psycopg2
from psycopg2.extras import RealDictCursor
from datetime import datetime

def add_test_data():
    try:
        # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        conn = psycopg2.connect(
            host="localhost",
            port="5432",
            database="questcity_db",
            user="postgres",
            password="postgres"
        )
        
        cur = conn.cursor(cursor_factory=RealDictCursor)
        
        print("üöÄ –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ...")
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        categories = [
            {"name": "–ì–æ—Ä–æ–¥—Å–∫–∏–µ –∫–≤–µ—Å—Ç—ã", "image": "assets/icons/city.svg"},
            {"name": "–ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–µ", "image": "assets/icons/history.svg"},
            {"name": "–ü—Ä–∏–∫–ª—é—á–µ–Ω–∏—è", "image": "assets/icons/adventure.svg"},
            {"name": "–î–µ—Ç–µ–∫—Ç–∏–≤—ã", "image": "assets/icons/detective.svg"},
        ]
        
        print("üìä –î–æ–±–∞–≤–ª—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏...")
        category_ids = []
        for category in categories:
            cur.execute("""
                INSERT INTO category (name, image, created_at, updated_at)
                VALUES (%s, %s, %s, %s) RETURNING id
            """, (category["name"], category["image"], datetime.now(), datetime.now()))
            category_id = cur.fetchone()["id"]
            category_ids.append(category_id)
            print(f"  ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—è: {category['name']} (ID: {category_id})")
        
        print("\nüìä –î–æ–±–∞–≤–ª—è–µ–º —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω—ã–µ —Å—Ä–µ–¥—Å—Ç–≤–∞...")
        vehicles = [
            {"name": "–ü–µ—à–∫–æ–º"},
            {"name": "–í–µ–ª–æ—Å–∏–ø–µ–¥"},
            {"name": "–ê–≤—Ç–æ–º–æ–±–∏–ª—å"},
        ]
        
        vehicle_ids = []
        for vehicle in vehicles:
            cur.execute("""
                INSERT INTO vehicle (name)
                VALUES (%s) RETURNING id
            """, (vehicle["name"],))
            vehicle_id = cur.fetchone()["id"]
            vehicle_ids.append(vehicle_id)
            print(f"  ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ –¢–°: {vehicle['name']} (ID: {vehicle_id})")
        
        print("\nüìä –î–æ–±–∞–≤–ª—è–µ–º –º–µ—Å—Ç–∞...")
        places = [
            {"name": "–¶–µ–Ω—Ç—Ä –≥–æ—Ä–æ–¥–∞"},
            {"name": "–ì–æ—Ä–æ–¥—Å–∫–æ–π –ø–∞—Ä–∫"},
            {"name": "–ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–π —Ä–∞–π–æ–Ω"},
        ]
        
        place_ids = []
        for place in places:
            cur.execute("""
                INSERT INTO place (name)
                VALUES (%s) RETURNING id
            """, (place["name"][:16],))
            place_id = cur.fetchone()["id"]
            place_ids.append(place_id)
            print(f"  ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ –º–µ—Å—Ç–æ: {place['name']} (ID: {place_id})")
        
        # –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –∫–≤–µ—Å—Ç—ã
        quests = [
            {
                "name": "–¢–∞–π–Ω—ã —Å—Ç–∞—Ä–æ–≥–æ –≥–æ—Ä–æ–¥–∞",
                "description": "–ò—Å—Å–ª–µ–¥—É–π—Ç–µ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–π —Ü–µ–Ω—Ç—Ä –≥–æ—Ä–æ–¥–∞ –∏ —Ä–∞—Å–∫—Ä–æ–π—Ç–µ –µ–≥–æ —Å–µ–∫—Ä–µ—Ç—ã",
                "category_id": category_ids[0] if category_ids else None,
                "cost": 1500,
                "reward": 2000,
                "level": "MIDDLE",
                "timeframe": "THREE_HOURS",
                "image": "assets/images/quest1.jpg",
                "mentor_preference": "GUIDE",
                "grouptype": "TWO",
                "milage": "UP_TO_TEN",
                "vehicle_id": vehicle_ids[0] if vehicle_ids else None,
                "place_id": place_ids[0] if place_ids else None
            },
            {
                "name": "–î–µ—Ç–µ–∫—Ç–∏–≤ –≤ –ø–∞—Ä–∫–µ",
                "description": "–†–µ—à–∏—Ç–µ –∑–∞–≥–∞–¥–æ—á–Ω–æ–µ –ø—Ä–µ—Å—Ç—É–ø–ª–µ–Ω–∏–µ –≤ –≥–æ—Ä–æ–¥—Å–∫–æ–º –ø–∞—Ä–∫–µ",
                "category_id": category_ids[2] if len(category_ids) > 2 else None,
                "cost": 1000,
                "reward": 1500,
                "level": "EASY",
                "timeframe": "ONE_HOUR",
                "image": "assets/images/quest2.jpg",
                "mentor_preference": "GUIDE",
                "grouptype": "TWO",
                "milage": "UP_TO_TEN",
                "vehicle_id": vehicle_ids[0] if vehicle_ids else None,
                "place_id": place_ids[1] if len(place_ids) > 1 else place_ids[0] if place_ids else None
            },
            {
                "name": "–ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–≥—É–ª–∫–∞",
                "description": "–ü–æ–≥—Ä—É–∑–∏—Ç–µ—Å—å –≤ –∏—Å—Ç–æ—Ä–∏—é –≥–æ—Ä–æ–¥–∞ —á–µ—Ä–µ–∑ —É–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–π –∫–≤–µ—Å—Ç",
                "category_id": category_ids[1] if len(category_ids) > 1 else None,
                "cost": 2000,
                "reward": 2500,
                "level": "HARD",
                "timeframe": "DAY",
                "image": "assets/images/quest3.jpg",
                "mentor_preference": "GUIDE",
                "grouptype": "THREE",
                "milage": "UP_TO_THIRTY",
                "vehicle_id": vehicle_ids[1] if len(vehicle_ids) > 1 else vehicle_ids[0] if vehicle_ids else None,
                "place_id": place_ids[2] if len(place_ids) > 2 else place_ids[0] if place_ids else None
            }
        ]
        
        print("\nüìä –î–æ–±–∞–≤–ª—è–µ–º –∫–≤–µ—Å—Ç—ã...")
        for quest in quests:
            cur.execute("""
                INSERT INTO quest (name, description, category_id, cost, reward, level, timeframe,
                                 auto_accrual, is_subscription, pay_extra, image, mentor_preference, 
                                 "group", milage, vehicle_id, place_id, created_at, updated_at)
                VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)
            """, (
                quest["name"], quest["description"], quest["category_id"],
                quest["cost"], quest["reward"], quest["level"], quest["timeframe"],
                False, False, 0, quest["image"], quest["mentor_preference"], 
                quest["grouptype"], quest["milage"], quest["vehicle_id"], quest["place_id"], 
                datetime.now(), datetime.now()
            ))
            print(f"  ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω –∫–≤–µ—Å—Ç: {quest['name']}")
        
        # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
        conn.commit()
        
        print("\n‚úÖ –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω—ã!")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        cur.execute("SELECT COUNT(*) as count FROM quest")
        quest_count = cur.fetchone()
        print(f"üìä –¢–µ–ø–µ—Ä—å –∫–≤–µ—Å—Ç–æ–≤ –≤ –±–∞–∑–µ: {quest_count['count']}")
        
        cur.execute("SELECT COUNT(*) as count FROM category")
        category_count = cur.fetchone()
        print(f"üìä –¢–µ–ø–µ—Ä—å –∫–∞—Ç–µ–≥–æ—Ä–∏–π –≤ –±–∞–∑–µ: {category_count['count']}")
        
        cur.close()
        conn.close()
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö: {e}")

if __name__ == "__main__":
    add_test_data()
