#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –≤—Å–µ—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
"""

import asyncio
from sqlalchemy import create_engine, text
from sqlalchemy.ext.asyncio import create_async_engine

# –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
DATABASE_URL = "postgresql+asyncpg://postgres:postgres@localhost:5432/questcity_db"

async def get_tools_list():
    """–ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ –∏–∑ –±–∞–∑—ã"""
    
    # –°–æ–∑–¥–∞–µ–º –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
    engine = create_async_engine(DATABASE_URL, echo=True)
    
    async with engine.begin() as conn:
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã
        tools_query = text("""
            SELECT 
                t.id,
                t.name
            FROM tool t
            ORDER BY t.id
        """)
        
        tools_result = await conn.execute(tools_query)
        tools_data = tools_result.fetchall()
        
        print(f"üîç –ò–ù–°–¢–†–£–ú–ï–ù–¢–´ (–Ω–∞–π–¥–µ–Ω–æ: {len(tools_data)}):")
        for i, tool in enumerate(tools_data):
            print(f"\n--- –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç {i+1} ---")
            print(f"ID: {tool.id}")
            print(f"–ù–∞–∑–≤–∞–Ω–∏–µ: {tool.name}")
        
        # –ï—Å–ª–∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ –Ω–µ—Ç, –ø–æ–ø—Ä–æ–±—É–µ–º –¥—Ä—É–≥–∏–µ —Ç–∞–±–ª–∏—Ü—ã
        if not tools_data:
            print("\nüîç –ü–æ–ø—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ —Ç–∞–±–ª–∏—Ü—É —Å –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞–º–∏...")
            
            # –ü—Ä–æ–≤–µ—Ä–∏–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –±–∞–∑—ã
            tables_query = text("""
                SELECT table_name 
                FROM information_schema.tables 
                WHERE table_schema = 'public' 
                AND table_name LIKE '%tool%'
                ORDER BY table_name
            """)
            
            tables_result = await conn.execute(tables_query)
            tables_data = tables_result.fetchall()
            
            print(f"–¢–∞–±–ª–∏—Ü—ã —Å 'tool' –≤ –Ω–∞–∑–≤–∞–Ω–∏–∏: {[t[0] for t in tables_data]}")
            
            # –ü–æ–ø—Ä–æ–±—É–µ–º —Ç–∞–±–ª–∏—Ü—É tools (–º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ —á–∏—Å–ª–æ)
            if any('tools' in t[0] for t in tables_data):
                tools_query = text("""
                    SELECT 
                        t.id,
                        t.name,
                        t.description
                    FROM tools t
                    ORDER BY t.id
                """)
                
                tools_result = await conn.execute(tools_query)
                tools_data = tools_result.fetchall()
                
                print(f"\nüîç –ò–ù–°–¢–†–£–ú–ï–ù–¢–´ –∏–∑ —Ç–∞–±–ª–∏—Ü—ã 'tools' (–Ω–∞–π–¥–µ–Ω–æ: {len(tools_data)}):")
                for i, tool in enumerate(tools_data):
                    print(f"\n--- –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç {i+1} ---")
                    print(f"ID: {tool.id}")
                    print(f"–ù–∞–∑–≤–∞–Ω–∏–µ: {tool.name}")
                    print(f"–û–ø–∏—Å–∞–Ω–∏–µ: {tool.description}")
    
    await engine.dispose()

if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤...")
    asyncio.run(get_tools_list())
    print("‚úÖ –ó–∞–ø—Ä–æ—Å –∑–∞–≤–µ—Ä—à–µ–Ω!")
