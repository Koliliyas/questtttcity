#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –æ–±–ª–∞—á–Ω–æ–º—É —Å–µ—Ä–≤–∏—Å—É QuestCity
"""

import requests
import socket
import dns.resolver
import sys
from datetime import datetime

def test_dns_resolution(domain):
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ DNS —Ä–µ–∑–æ–ª—é—Ü–∏–∏ –¥–æ–º–µ–Ω–∞"""
    print(f"üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ DNS –¥–ª—è {domain}...")
    try:
        answers = dns.resolver.resolve(domain, 'A')
        ips = [str(rdata) for rdata in answers]
        print(f"‚úÖ DNS —Ä–µ–∑–æ–ª—é—Ü–∏—è —É—Å–ø–µ—à–Ω–∞: {ips}")
        return ips
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ DNS —Ä–µ–∑–æ–ª—é—Ü–∏–∏: {e}")
        return []

def test_http_connection(url, description=""):
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ HTTP –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è"""
    print(f"üåê –ü—Ä–æ–≤–µ—Ä–∫–∞ HTTP –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ {url} {description}...")
    try:
        response = requests.get(url, timeout=10, allow_redirects=False)
        print(f"‚úÖ HTTP —Å—Ç–∞—Ç—É—Å: {response.status_code}")
        if response.status_code == 301 or response.status_code == 302:
            print(f"   üîÑ –†–µ–¥–∏—Ä–µ–∫—Ç –Ω–∞: {response.headers.get('Location', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}")
        return response
    except requests.exceptions.RequestException as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ HTTP –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
        return None

def test_api_endpoint(base_url, endpoint="/api/v1/health/"):
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ API endpoint"""
    url = base_url.rstrip('/') + endpoint
    print(f"üîå –ü—Ä–æ–≤–µ—Ä–∫–∞ API endpoint: {url}")
    try:
        response = requests.get(url, timeout=10)
        print(f"‚úÖ API —Å—Ç–∞—Ç—É—Å: {response.status_code}")
        if response.status_code == 200:
            try:
                data = response.json()
                print(f"   üìä –û—Ç–≤–µ—Ç API: {data}")
            except:
                print(f"   üìÑ –û—Ç–≤–µ—Ç: {response.text[:200]}...")
        return response
    except requests.exceptions.RequestException as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ API: {e}")
        return None

def test_ssl_certificate(domain):
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞"""
    print(f"üîí –ü—Ä–æ–≤–µ—Ä–∫–∞ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞ –¥–ª—è {domain}...")
    try:
        response = requests.get(f"https://{domain}", timeout=10, verify=True)
        print(f"‚úÖ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –≤–∞–ª–∏–¥–µ–Ω")
        return True
    except requests.exceptions.SSLError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞: {e}")
        return False
    except requests.exceptions.RequestException as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ HTTPS –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
        return False

def main():
    print("üöÄ QuestCity Cloud Connection Test")
    print("=" * 50)
    print(f"üìÖ –í—Ä–µ–º—è —Ç–µ—Å—Ç–∞: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
    print()

    # –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
    domain = "questcity.ru"
    server_ip = "176.98.177.16"
    
    # –¢–µ—Å—Ç 1: DNS —Ä–µ–∑–æ–ª—é—Ü–∏—è
    ips = test_dns_resolution(domain)
    print()
    
    # –¢–µ—Å—Ç 2: HTTP –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –¥–æ–º–µ–Ω—É
    http_response = test_http_connection(f"http://{domain}", "(–¥–æ–º–µ–Ω)")
    print()
    
    # –¢–µ—Å—Ç 3: HTTP –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ IP
    ip_response = test_http_connection(f"http://{server_ip}", "(IP –∞–¥—Ä–µ—Å)")
    print()
    
    # –¢–µ—Å—Ç 4: API —á–µ—Ä–µ–∑ IP
    api_response = test_api_endpoint(f"http://{server_ip}")
    print()
    
    # –¢–µ—Å—Ç 5: SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç
    ssl_ok = test_ssl_certificate(domain)
    print()
    
    # –¢–µ—Å—Ç 6: API —á–µ—Ä–µ–∑ HTTPS (–µ—Å–ª–∏ SSL —Ä–∞–±–æ—Ç–∞–µ—Ç)
    if ssl_ok:
        https_api_response = test_api_endpoint(f"https://{domain}")
        print()
    
    # –ò—Ç–æ–≥–æ–≤–∞—è –æ—Ü–µ–Ω–∫–∞
    print("üìä –ò–¢–û–ì–û–í–ê–Ø –û–¶–ï–ù–ö–ê")
    print("=" * 50)
    
    if ips and server_ip in ips:
        print("‚úÖ DNS –Ω–∞—Å—Ç—Ä–æ–µ–Ω –ø—Ä–∞–≤–∏–ª—å–Ω–æ")
    else:
        print("‚ùå –ü—Ä–æ–±–ª–µ–º—ã —Å DNS")
    
    if ip_response and ip_response.status_code in [200, 405]:
        print("‚úÖ –°–µ—Ä–≤–µ—Ä –æ—Ç–≤–µ—á–∞–µ—Ç —á–µ—Ä–µ–∑ IP")
    else:
        print("‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç —á–µ—Ä–µ–∑ IP")
    
    if api_response and api_response.status_code == 200:
        print("‚úÖ API —Ä–∞–±–æ—Ç–∞–µ—Ç —á–µ—Ä–µ–∑ IP")
    else:
        print("‚ùå API –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç —á–µ—Ä–µ–∑ IP")
    
    if http_response and http_response.status_code == 301:
        print("‚ö†Ô∏è  –î–æ–º–µ–Ω –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ—Ç –Ω–∞ HTTPS")
    elif http_response and http_response.status_code == 200:
        print("‚úÖ –î–æ–º–µ–Ω —Ä–∞–±–æ—Ç–∞–µ—Ç –ø–æ HTTP")
    else:
        print("‚ùå –ü—Ä–æ–±–ª–µ–º—ã —Å –¥–æ—Å—Ç—É–ø–æ–º –∫ –¥–æ–º–µ–Ω—É")
    
    if ssl_ok:
        print("‚úÖ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
    else:
        print("‚ùå SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
    
    print()
    print("üîß –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:")
    if not ssl_ok:
        print("   1. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç (Let's Encrypt)")
        print("   2. –û–±–Ω–æ–≤–∏—Ç–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é nginx –¥–ª—è HTTPS")
    if http_response and http_response.status_code == 301:
        print("   3. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ä–µ–¥–∏—Ä–µ–∫—Ç —Å HTTP –Ω–∞ HTTPS")
    print("   4. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤ –ø–∞–Ω–µ–ª–∏ Timeweb")

if __name__ == "__main__":
    main()

