#!/usr/bin/env python3
"""
–ü–æ–ª–Ω–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–µ—Ä–≤–µ—Ä–Ω–æ–π –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –∏–∑ –º–∏–≥—Ä–∞—Ü–∏–π
(–í–µ—Ä—Å–∏—è –¥–ª—è Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞)
"""
import psycopg2
import uuid
import bcrypt
from datetime import datetime

# –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–µ—Ä–≤–µ—Ä–Ω–æ–π –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö (–≤–Ω—É—Ç—Ä–∏ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞)
SERVER_DB_CONFIG = {
    'host': 'localhost',  # –í–Ω—É—Ç—Ä–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –¥–æ—Å—Ç—É–ø–Ω–∞ —á–µ—Ä–µ–∑ localhost
    'port': 5432,
    'database': 'questcity',
    'user': 'postgres',
    'password': 'postgres'
}

def complete_database_fix():
    """–ü–æ–ª–Ω–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–µ—Ä–≤–µ—Ä–Ω–æ–π –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    print("üîß –ü–æ–ª–Ω–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–µ—Ä–≤–µ—Ä–Ω–æ–π –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö")
    print("=" * 80)
    print(f"üìÖ –í—Ä–µ–º—è: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
    print()

    try:
        # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–µ—Ä–≤–µ—Ä–Ω–æ–π –±–∞–∑–µ
        print("üîó –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–µ—Ä–≤–µ—Ä–Ω–æ–π –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...")
        conn = psycopg2.connect(**SERVER_DB_CONFIG)
        conn.autocommit = True
        cursor = conn.cursor()
        print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–µ—Ä–≤–µ—Ä–Ω–æ–π –±–∞–∑–µ —É—Å–ø–µ—à–Ω–æ!")

        # –®–∞–≥ 1: –°–æ–∑–¥–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Ç–∞–±–ª–∏—Ü—É profile
        print("\nüìã –®–∞–≥ 1: –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π —Ç–∞–±–ª–∏—Ü—ã profile")
        cursor.execute("""
            DROP TABLE IF EXISTS profile CASCADE;
        """)
        print("  ‚úÖ –£–¥–∞–ª–µ–Ω–∞ —Å—Ç–∞—Ä–∞—è —Ç–∞–±–ª–∏—Ü–∞ profile")

        cursor.execute("""
            CREATE TABLE profile (
                id SERIAL PRIMARY KEY,
                avatar_url VARCHAR(1024),
                instagram_username VARCHAR(1024) NOT NULL DEFAULT '',
                credits INTEGER NOT NULL DEFAULT 0
            );
        """)
        print("  ‚úÖ –°–æ–∑–¥–∞–Ω–∞ –Ω–æ–≤–∞—è —Ç–∞–±–ª–∏—Ü–∞ profile —Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π")

        # –®–∞–≥ 2: –°–æ–∑–¥–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Ç–∞–±–ª–∏—Ü—É user
        print("\nüìã –®–∞–≥ 2: –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π —Ç–∞–±–ª–∏—Ü—ã user")
        cursor.execute("""
            DROP TABLE IF EXISTS "user" CASCADE;
        """)
        print("  ‚úÖ –£–¥–∞–ª–µ–Ω–∞ —Å—Ç–∞—Ä–∞—è —Ç–∞–±–ª–∏—Ü–∞ user")

        cursor.execute("""
            CREATE TABLE "user" (
                id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
                username VARCHAR(15) NOT NULL UNIQUE,
                first_name VARCHAR(128) NOT NULL,
                last_name VARCHAR(128) NOT NULL,
                full_name VARCHAR(257) GENERATED ALWAYS AS (first_name || ' ' || last_name) STORED,
                password VARCHAR(1024) NOT NULL,
                email VARCHAR(30) NOT NULL UNIQUE,
                profile_id INTEGER NOT NULL UNIQUE REFERENCES profile(id) ON DELETE CASCADE,
                role INTEGER NOT NULL DEFAULT 0,
                is_active BOOLEAN NOT NULL DEFAULT true,
                is_verified BOOLEAN NOT NULL DEFAULT false,
                can_edit_quests BOOLEAN NOT NULL DEFAULT false,
                can_lock_users BOOLEAN NOT NULL DEFAULT false,
                created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
            );
        """)
        print("  ‚úÖ –°–æ–∑–¥–∞–Ω–∞ –Ω–æ–≤–∞—è —Ç–∞–±–ª–∏—Ü–∞ user —Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π")

        # –°–æ–∑–¥–∞–µ–º –∏–Ω–¥–µ–∫—Å—ã –¥–ª—è user
        cursor.execute("""
            CREATE INDEX ix_user_email ON "user" (email);
        """)
        cursor.execute("""
            CREATE INDEX ix_user_username ON "user" (username);
        """)
        print("  ‚úÖ –°–æ–∑–¥–∞–Ω—ã –∏–Ω–¥–µ–∫—Å—ã –¥–ª—è —Ç–∞–±–ª–∏—Ü—ã user")

        # –®–∞–≥ 3: –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É point_type
        print("\nüìã –®–∞–≥ 3: –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã point_type")
        cursor.execute("""
            CREATE TABLE IF NOT EXISTS point_type (
                id SERIAL PRIMARY KEY,
                name VARCHAR NOT NULL,
                description TEXT,
                created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
            );
        """)
        print("  ‚úÖ –°–æ–∑–¥–∞–Ω–∞ —Ç–∞–±–ª–∏—Ü–∞ point_type")

        # –®–∞–≥ 4: –ò—Å–ø—Ä–∞–≤–ª—è–µ–º —Ç–∞–±–ª–∏—Ü—É point
        print("\nüìã –®–∞–≥ 4: –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã point")
        cursor.execute("""
            DROP TABLE IF EXISTS point CASCADE;
        """)
        print("  ‚úÖ –£–¥–∞–ª–µ–Ω–∞ —Å—Ç–∞—Ä–∞—è —Ç–∞–±–ª–∏—Ü–∞ point")

        cursor.execute("""
            CREATE TABLE point (
                id SERIAL PRIMARY KEY,
                name_of_location VARCHAR(32) NOT NULL,
                "order" INTEGER NOT NULL,
                description TEXT NOT NULL,
                type_id INTEGER NOT NULL REFERENCES point_type(id),
                tool_id INTEGER REFERENCES tool(id),
                is_divide BOOLEAN DEFAULT false,
                quest_id INTEGER NOT NULL REFERENCES quest(id) ON DELETE CASCADE,
                created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
            );
        """)
        print("  ‚úÖ –°–æ–∑–¥–∞–Ω–∞ –Ω–æ–≤–∞—è —Ç–∞–±–ª–∏—Ü–∞ point —Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π")

        # –°–æ–∑–¥–∞–µ–º –∏–Ω–¥–µ–∫—Å—ã –¥–ª—è point
        cursor.execute("""
            CREATE INDEX ix_point_quest_id ON point (quest_id);
        """)
        cursor.execute("""
            CREATE INDEX ix_point_type_id ON point (type_id);
        """)
        print("  ‚úÖ –°–æ–∑–¥–∞–Ω—ã –∏–Ω–¥–µ–∫—Å—ã –¥–ª—è —Ç–∞–±–ª–∏—Ü—ã point")

        # –®–∞–≥ 5: –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É place_settings
        print("\nüìã –®–∞–≥ 5: –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã place_settings")
        cursor.execute("""
            CREATE TABLE IF NOT EXISTS place_settings (
                id SERIAL PRIMARY KEY,
                longitude DOUBLE PRECISION NOT NULL,
                latitude DOUBLE PRECISION NOT NULL,
                detections_radius DOUBLE PRECISION NOT NULL,
                height DOUBLE PRECISION NOT NULL,
                random_occurrence DOUBLE PRECISION,
                interaction_inaccuracy DOUBLE PRECISION NOT NULL,
                part INTEGER,
                point_id INTEGER NOT NULL REFERENCES point(id) ON DELETE CASCADE,
                created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
            );
        """)
        print("  ‚úÖ –°–æ–∑–¥–∞–Ω–∞ —Ç–∞–±–ª–∏—Ü–∞ place_settings")

        # –®–∞–≥ 6: –ó–∞–ø–æ–ª–Ω—è–µ–º point_type –¥–∞–Ω–Ω—ã–º–∏ –∏–∑ activity
        print("\nüìã –®–∞–≥ 6: –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ point_type –¥–∞–Ω–Ω—ã–º–∏ –∏–∑ activity")
        cursor.execute("""
            INSERT INTO point_type (id, name, description)
            SELECT id, name, name as description FROM activity
            ON CONFLICT (id) DO NOTHING;
        """)
        print("  ‚úÖ –ó–∞–ø–æ–ª–Ω–µ–Ω–∞ —Ç–∞–±–ª–∏—Ü–∞ point_type")

        # –®–∞–≥ 7: –°–æ–∑–¥–∞–µ–º –∞–¥–º–∏–Ω–∞
        print("\nüìã –®–∞–≥ 7: –°–æ–∑–¥–∞–Ω–∏–µ –∞–¥–º–∏–Ω–∞")
        
        # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å –¥–ª—è –∞–¥–º–∏–Ω–∞
        cursor.execute("""
            INSERT INTO profile (id, instagram_username, credits)
            VALUES (1, 'admin', 1000)
            ON CONFLICT (id) DO NOTHING;
        """)
        
        # –•–µ—à–∏—Ä—É–µ–º –ø–∞—Ä–æ–ª—å
        password = "admin123"
        hashed_password = bcrypt.hashpw(password.encode('utf-8'), bcrypt.gensalt()).decode('utf-8')
        
        # –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–¥–º–∏–Ω–∞
        cursor.execute("""
            INSERT INTO "user" (id, username, first_name, last_name, password, email, profile_id, role, is_active, is_verified, can_edit_quests, can_lock_users)
            VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)
            ON CONFLICT (email) DO NOTHING;
        """, (
            str(uuid.uuid4()),
            'admin',
            'Admin',
            'User',
            hashed_password,
            'admin@questcity.com',
            1,
            1,  # role = 1 –¥–ª—è –∞–¥–º–∏–Ω–∞
            True,
            True,
            True,
            True
        ))
        print("  ‚úÖ –°–æ–∑–¥–∞–Ω –∞–¥–º–∏–Ω: admin@questcity.com / admin123")

        # –®–∞–≥ 8: –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø—Ä–∞–≤–æ—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        print("\nüìã –®–∞–≥ 8: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–ø—Ä–∞–≤–æ—á–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö")
        
        # –û–±–Ω–æ–≤–ª—è–µ–º category
        cursor.execute("""
            UPDATE category SET name = CASE 
                WHEN id = 1 THEN '–ü—Ä–∏–∫–ª—é—á–µ–Ω–∏—è'
                WHEN id = 2 THEN '–î–µ—Ç–µ–∫—Ç–∏–≤'
                WHEN id = 3 THEN '–ò—Å—Ç–æ—Ä–∏—è'
                WHEN id = 4 THEN '–ù–∞—É–∫–∞'
                ELSE name
            END WHERE id IN (1, 2, 3, 4);
        """)
        
        # –û–±–Ω–æ–≤–ª—è–µ–º vehicle
        cursor.execute("""
            UPDATE vehicle SET name = CASE 
                WHEN id = 1 THEN '–ü–µ—à–∫–æ–º'
                WHEN id = 2 THEN '–í–µ–ª–æ—Å–∏–ø–µ–¥'
                WHEN id = 3 THEN '–ê–≤—Ç–æ–º–æ–±–∏–ª—å'
                WHEN id = 4 THEN '–û–±—â–µ—Å—Ç–≤–µ–Ω–Ω—ã–π —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç'
                ELSE name
            END WHERE id IN (1, 2, 3, 4);
        """)
        
        # –û–±–Ω–æ–≤–ª—è–µ–º place
        cursor.execute("""
            UPDATE place SET name = CASE 
                WHEN id = 1 THEN '–¶–µ–Ω—Ç—Ä –≥–æ—Ä–æ–¥–∞'
                WHEN id = 2 THEN '–ü–∞—Ä–∫'
                WHEN id = 3 THEN '–ú—É–∑–µ–π'
                WHEN id = 4 THEN '–¢–æ—Ä–≥–æ–≤—ã–π —Ü–µ–Ω—Ç—Ä'
                ELSE name
            END WHERE id IN (1, 2, 3, 4);
        """)
        
        # –û–±–Ω–æ–≤–ª—è–µ–º activity
        cursor.execute("""
            UPDATE activity SET name = CASE 
                WHEN id = 1 THEN '–§–æ—Ç–æ'
                WHEN id = 2 THEN '–í–∏–¥–µ–æ'
                WHEN id = 3 THEN '–¢–µ–∫—Å—Ç'
                WHEN id = 4 THEN '–ê—É–¥–∏–æ'
                ELSE name
            END WHERE id IN (1, 2, 3, 4);
        """)
        
        # –û–±–Ω–æ–≤–ª—è–µ–º tool
        cursor.execute("""
            UPDATE tool SET name = CASE 
                WHEN id = 1 THEN '–ö–∞–º–µ—Ä–∞'
                WHEN id = 2 THEN '–ö–æ–º–ø–∞—Å'
                WHEN id = 3 THEN '–ö–∞—Ä—Ç–∞'
                WHEN id = 4 THEN '–§–æ–Ω–∞—Ä–∏–∫'
                ELSE name
            END WHERE id IN (1, 2, 3, 4);
        """)
        print("  ‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω—ã —Å–ø—Ä–∞–≤–æ—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ")

        cursor.close()
        conn.close()
        
        print("\n" + "=" * 80)
        print("‚úÖ –ü–æ–ª–Ω–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
        print("\nüìã –ß—Ç–æ –±—ã–ª–æ —Å–¥–µ–ª–∞–Ω–æ:")
        print("  1. ‚úÖ –ü–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∞ —Ç–∞–±–ª–∏—Ü–∞ profile —Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π")
        print("  2. ‚úÖ –ü–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∞ —Ç–∞–±–ª–∏—Ü–∞ user —Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π")
        print("  3. ‚úÖ –°–æ–∑–¥–∞–Ω–∞ —Ç–∞–±–ª–∏—Ü–∞ point_type")
        print("  4. ‚úÖ –ü–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∞ —Ç–∞–±–ª–∏—Ü–∞ point —Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π")
        print("  5. ‚úÖ –°–æ–∑–¥–∞–Ω–∞ —Ç–∞–±–ª–∏—Ü–∞ place_settings")
        print("  6. ‚úÖ –ó–∞–ø–æ–ª–Ω–µ–Ω–∞ —Ç–∞–±–ª–∏—Ü–∞ point_type –¥–∞–Ω–Ω—ã–º–∏")
        print("  7. ‚úÖ –°–æ–∑–¥–∞–Ω –∞–¥–º–∏–Ω: admin@questcity.com / admin123")
        print("  8. ‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω—ã —Å–ø—Ä–∞–≤–æ—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ")
        
        return True

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

def main():
    success = complete_database_fix()
    
    if not success:
        print("\n‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∏—Å–ø—Ä–∞–≤–∏—Ç—å –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö")

if __name__ == "__main__":
    main()
