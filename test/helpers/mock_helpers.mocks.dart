// Mocks generated by Mockito 5.4.6 from annotations in mock_helpers.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;
import 'package:dartz/dartz.dart' as _i3;
import 'package:flutter_secure_storage/flutter_secure_storage.dart' as _i7;
import 'package:http/http.dart' as _i4;
import 'package:internet_connection_checker/internet_connection_checker.dart'
    as _i6;
import 'package:los_angeles_quest/core/error/failures.dart' as _i9;
import 'package:los_angeles_quest/core/platform/network_info.dart' as _i8;
import 'package:los_angeles_quest/features/data/datasources/quest_api_datasource.dart'
    as _i10;
import 'package:los_angeles_quest/features/data/models/quests/quest_api_model.dart'
    as _i11;
import 'package:los_angeles_quest/features/data/models/quests/quest_create_request_model.dart'
    as _i12;
import 'package:los_angeles_quest/features/domain/repositories/quest_api_repository.dart'
    as _i13;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i3.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeResponse_1 extends _i1.SmartFake implements _i4.Response {
  _FakeResponse_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeStreamedResponse_2 extends _i1.SmartFake
    implements _i4.StreamedResponse {
  _FakeStreamedResponse_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [http.Client].
class MockHttpClient extends _i1.Mock implements _i4.Client {
  MockHttpClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i4.Response> head(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #head,
          [url],
          {#headers: headers},
        ),
        returnValue: _i5.Future<_i4.Response>.value(_FakeResponse_1(
          this,
          Invocation.method(
            #head,
            [url],
            {#headers: headers},
          ),
        )),
      ) as _i5.Future<_i4.Response>);

  @override
  _i5.Future<_i4.Response> get(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [url],
          {#headers: headers},
        ),
        returnValue: _i5.Future<_i4.Response>.value(_FakeResponse_1(
          this,
          Invocation.method(
            #get,
            [url],
            {#headers: headers},
          ),
        )),
      ) as _i5.Future<_i4.Response>);

  @override
  _i5.Future<_i4.Response> post(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #post,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i5.Future<_i4.Response>.value(_FakeResponse_1(
          this,
          Invocation.method(
            #post,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i5.Future<_i4.Response>);

  @override
  _i5.Future<_i4.Response> put(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #put,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i5.Future<_i4.Response>.value(_FakeResponse_1(
          this,
          Invocation.method(
            #put,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i5.Future<_i4.Response>);

  @override
  _i5.Future<_i4.Response> patch(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #patch,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i5.Future<_i4.Response>.value(_FakeResponse_1(
          this,
          Invocation.method(
            #patch,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i5.Future<_i4.Response>);

  @override
  _i5.Future<_i4.Response> delete(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i5.Future<_i4.Response>.value(_FakeResponse_1(
          this,
          Invocation.method(
            #delete,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i5.Future<_i4.Response>);

  @override
  _i5.Future<String> read(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #read,
          [url],
          {#headers: headers},
        ),
        returnValue: _i5.Future<String>.value(_i2.dummyValue<String>(
          this,
          Invocation.method(
            #read,
            [url],
            {#headers: headers},
          ),
        )),
      ) as _i5.Future<String>);

  @override
  _i5.Future<_i4.StreamedResponse> send(_i4.BaseRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #send,
          [request],
        ),
        returnValue:
            _i5.Future<_i4.StreamedResponse>.value(_FakeStreamedResponse_2(
          this,
          Invocation.method(
            #send,
            [request],
          ),
        )),
      ) as _i5.Future<_i4.StreamedResponse>);

  @override
  void close() => super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [FlutterSecureStorage].
class MockFlutterSecureStorage extends _i1.Mock
    implements _i7.FlutterSecureStorage {
  MockFlutterSecureStorage() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<void> write({
    required String? key,
    required String? value,
    String? groupId,
    String? accountName,
    _i7.IOSOptions? iOptions,
    _i7.AndroidOptions? aOptions,
    _i7.LinuxOptions? lOptions,
    _i7.WebOptions? webOptions,
    _i7.MacOsOptions? mOptions,
    _i7.WindowsOptions? wOptions,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #write,
          [],
          {
            #key: key,
            #value: value,
            #groupId: groupId,
            #accountName: accountName,
            #iOptions: iOptions,
            #aOptions: aOptions,
            #lOptions: lOptions,
            #webOptions: webOptions,
            #mOptions: mOptions,
            #wOptions: wOptions,
          },
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<String?> read({
    required String? key,
    String? groupId,
    String? accountName,
    _i7.IOSOptions? iOptions,
    _i7.AndroidOptions? aOptions,
    _i7.LinuxOptions? lOptions,
    _i7.WebOptions? webOptions,
    _i7.MacOsOptions? mOptions,
    _i7.WindowsOptions? wOptions,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #read,
          [],
          {
            #key: key,
            #groupId: groupId,
            #accountName: accountName,
            #iOptions: iOptions,
            #aOptions: aOptions,
            #lOptions: lOptions,
            #webOptions: webOptions,
            #mOptions: mOptions,
            #wOptions: wOptions,
          },
        ),
        returnValue: _i5.Future<String?>.value(),
      ) as _i5.Future<String?>);

  @override
  _i5.Future<bool> containsKey({
    required String? key,
    String? groupId,
    String? accountName,
    _i7.IOSOptions? iOptions,
    _i7.AndroidOptions? aOptions,
    _i7.LinuxOptions? lOptions,
    _i7.WebOptions? webOptions,
    _i7.MacOsOptions? mOptions,
    _i7.WindowsOptions? wOptions,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #containsKey,
          [],
          {
            #key: key,
            #groupId: groupId,
            #accountName: accountName,
            #iOptions: iOptions,
            #aOptions: aOptions,
            #lOptions: lOptions,
            #webOptions: webOptions,
            #mOptions: mOptions,
            #wOptions: wOptions,
          },
        ),
        returnValue: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);

  @override
  _i5.Future<void> delete({
    required String? key,
    String? groupId,
    String? accountName,
    _i7.IOSOptions? iOptions,
    _i7.AndroidOptions? aOptions,
    _i7.LinuxOptions? lOptions,
    _i7.WebOptions? webOptions,
    _i7.MacOsOptions? mOptions,
    _i7.WindowsOptions? wOptions,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [],
          {
            #key: key,
            #groupId: groupId,
            #accountName: accountName,
            #iOptions: iOptions,
            #aOptions: aOptions,
            #lOptions: lOptions,
            #webOptions: webOptions,
            #mOptions: mOptions,
            #wOptions: wOptions,
          },
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> deleteAll({
    String? groupId,
    String? accountName,
    _i7.IOSOptions? iOptions,
    _i7.AndroidOptions? aOptions,
    _i7.LinuxOptions? lOptions,
    _i7.WebOptions? webOptions,
    _i7.MacOsOptions? mOptions,
    _i7.WindowsOptions? wOptions,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteAll,
          [],
          {
            #groupId: groupId,
            #accountName: accountName,
            #iOptions: iOptions,
            #aOptions: aOptions,
            #lOptions: lOptions,
            #webOptions: webOptions,
            #mOptions: mOptions,
            #wOptions: wOptions,
          },
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<Map<String, String>> readAll({
    String? groupId,
    String? accountName,
    _i7.IOSOptions? iOptions,
    _i7.AndroidOptions? aOptions,
    _i7.LinuxOptions? lOptions,
    _i7.WebOptions? webOptions,
    _i7.MacOsOptions? mOptions,
    _i7.WindowsOptions? wOptions,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #readAll,
          [],
          {
            #groupId: groupId,
            #accountName: accountName,
            #iOptions: iOptions,
            #aOptions: aOptions,
            #lOptions: lOptions,
            #webOptions: webOptions,
            #mOptions: mOptions,
            #wOptions: wOptions,
          },
        ),
        returnValue:
            _i5.Future<Map<String, String>>.value(<String, String>{}),
      ) as _i5.Future<Map<String, String>>);
}

/// A class which mocks [InternetConnectionChecker].
class MockInternetConnectionChecker extends _i1.Mock
    implements _i6.InternetConnectionChecker {
  MockInternetConnectionChecker() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<bool> get hasConnection => (super.noSuchMethod(
        Invocation.getter(#hasConnection),
        returnValue: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);

  @override
  _i5.Future<_i6.InternetConnectionStatus> get connectionStatus =>
      (super.noSuchMethod(
        Invocation.getter(#connectionStatus),
        returnValue: _i5.Future<_i6.InternetConnectionStatus>.value(
            _i6.InternetConnectionStatus.disconnected),
      ) as _i5.Future<_i6.InternetConnectionStatus>);

  @override
  _i5.Stream<_i6.InternetConnectionStatus> get onStatusChange =>
      (super.noSuchMethod(
        Invocation.getter(#onStatusChange),
        returnValue: _i5.Stream<_i6.InternetConnectionStatus>.empty(),
      ) as _i5.Stream<_i6.InternetConnectionStatus>);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  bool get isActivelyChecking => (super.noSuchMethod(
        Invocation.getter(#isActivelyChecking),
        returnValue: false,
      ) as bool);

  @override
  _i5.Future<bool> isHostReachable(_i6.AddressCheckOptions? options) =>
      (super.noSuchMethod(
        Invocation.method(
          #isHostReachable,
          [options],
        ),
        returnValue: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);
}

/// A class which mocks [NetworkInfo].
class MockNetworkInfo extends _i1.Mock implements _i8.NetworkInfo {
  MockNetworkInfo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<bool> get isConnected => (super.noSuchMethod(
        Invocation.getter(#isConnected),
        returnValue: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);
}

/// A class which mocks [QuestApiDataSource].
class MockQuestApiDataSource extends _i1.Mock implements _i10.QuestApiDataSource {
  MockQuestApiDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<List<_i11.QuestListItemApiModel>> getAllQuests() =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllQuests,
          [],
        ),
        returnValue: _i5.Future<List<_i11.QuestListItemApiModel>>.value(
            <_i11.QuestListItemApiModel>[]),
      ) as _i5.Future<List<_i11.QuestListItemApiModel>>);

  @override
  _i5.Future<_i11.QuestApiModel> getQuestById(int? questId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getQuestById,
          [questId],
        ),
        returnValue: _i5.Future<_i11.QuestApiModel>.value(_i2.dummyValue<_i11.QuestApiModel>(
          this,
          Invocation.method(
            #getQuestById,
            [questId],
          ),
        )),
      ) as _i5.Future<_i11.QuestApiModel>);

  @override
  _i5.Future<_i11.QuestApiModel> getQuestWorking(int? questId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getQuestWorking,
          [questId],
        ),
        returnValue: _i5.Future<_i11.QuestApiModel>.value(_i2.dummyValue<_i11.QuestApiModel>(
          this,
          Invocation.method(
            #getQuestWorking,
            [questId],
          ),
        )),
      ) as _i5.Future<_i11.QuestApiModel>);

  @override
  _i5.Future<_i11.QuestApiModel> createQuest(
          _i12.QuestCreateRequestModel? createRequest) =>
      (super.noSuchMethod(
        Invocation.method(
          #createQuest,
          [createRequest],
        ),
        returnValue: _i5.Future<_i11.QuestApiModel>.value(_i2.dummyValue<_i11.QuestApiModel>(
          this,
          Invocation.method(
            #createQuest,
            [createRequest],
          ),
        )),
      ) as _i5.Future<_i11.QuestApiModel>);

  @override
  _i5.Future<_i11.QuestApiModel> updateQuest(
    int? questId,
    _i12.QuestUpdateRequestModel? updateRequest,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateQuest,
          [
            questId,
            updateRequest,
          ],
        ),
        returnValue: _i5.Future<_i11.QuestApiModel>.value(_i2.dummyValue<_i11.QuestApiModel>(
          this,
          Invocation.method(
            #updateQuest,
            [
              questId,
              updateRequest,
            ],
          ),
        )),
      ) as _i5.Future<_i11.QuestApiModel>);

  @override
  _i5.Future<void> deleteQuest(int? questId) => (super.noSuchMethod(
        Invocation.method(
          #deleteQuest,
          [questId],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
}

/// A class which mocks [QuestApiRepository].
class MockQuestApiRepository extends _i1.Mock
    implements _i13.QuestApiRepository {
  MockQuestApiRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i3.Either<_i9.Failure, List<_i11.QuestListItemApiModel>>>
      getAllQuests() => (super.noSuchMethod(
            Invocation.method(
              #getAllQuests,
              [],
            ),
            returnValue: _i5.Future<
                    _i3.Either<_i9.Failure, List<_i11.QuestListItemApiModel>>>.value(
                _FakeEither_0<_i9.Failure, List<_i11.QuestListItemApiModel>>(
              this,
              Invocation.method(
                #getAllQuests,
                [],
              ),
            )),
          ) as _i5.Future<
              _i3.Either<_i9.Failure, List<_i11.QuestListItemApiModel>>>);

  @override
  _i5.Future<_i3.Either<_i9.Failure, _i11.QuestApiModel>> getQuestById(
          int? questId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getQuestById,
          [questId],
        ),
        returnValue:
            _i5.Future<_i3.Either<_i9.Failure, _i11.QuestApiModel>>.value(
                _FakeEither_0<_i9.Failure, _i11.QuestApiModel>(
          this,
          Invocation.method(
            #getQuestById,
            [questId],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i9.Failure, _i11.QuestApiModel>>);

  @override
  _i5.Future<_i3.Either<_i9.Failure, _i11.QuestApiModel>> getQuestWorking(
          int? questId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getQuestWorking,
          [questId],
        ),
        returnValue:
            _i5.Future<_i3.Either<_i9.Failure, _i11.QuestApiModel>>.value(
                _FakeEither_0<_i9.Failure, _i11.QuestApiModel>(
          this,
          Invocation.method(
            #getQuestWorking,
            [questId],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i9.Failure, _i11.QuestApiModel>>);

  @override
  _i5.Future<_i3.Either<_i9.Failure, _i11.QuestApiModel>> createQuest(
          _i12.QuestCreateRequestModel? createRequest) =>
      (super.noSuchMethod(
        Invocation.method(
          #createQuest,
          [createRequest],
        ),
        returnValue:
            _i5.Future<_i3.Either<_i9.Failure, _i11.QuestApiModel>>.value(
                _FakeEither_0<_i9.Failure, _i11.QuestApiModel>(
          this,
          Invocation.method(
            #createQuest,
            [createRequest],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i9.Failure, _i11.QuestApiModel>>);

  @override
  _i5.Future<_i3.Either<_i9.Failure, _i11.QuestApiModel>> updateQuest(
    int? questId,
    _i12.QuestUpdateRequestModel? updateRequest,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateQuest,
          [
            questId,
            updateRequest,
          ],
        ),
        returnValue:
            _i5.Future<_i3.Either<_i9.Failure, _i11.QuestApiModel>>.value(
                _FakeEither_0<_i9.Failure, _i11.QuestApiModel>(
          this,
          Invocation.method(
            #updateQuest,
            [
              questId,
              updateRequest,
            ],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i9.Failure, _i11.QuestApiModel>>);

  @override
  _i5.Future<_i3.Either<_i9.Failure, void>> deleteQuest(int? questId) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteQuest,
          [questId],
        ),
        returnValue: _i5.Future<_i3.Either<_i9.Failure, void>>.value(
            _FakeEither_0<_i9.Failure, void>(
          this,
          Invocation.method(
            #deleteQuest,
            [questId],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i9.Failure, void>>);
} 