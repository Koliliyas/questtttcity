#!/usr/bin/env python3
"""
–°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã user —Å –∞–¥–º–∏–Ω–æ–º
"""
import psycopg2
import bcrypt
import uuid

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–µ—Ä–≤–µ—Ä–Ω–æ–π –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
SERVER_DB_CONFIG = {
    'host': '7da2c0adf39345ca39269f40.twc1.net',
    'port': 5432,
    'database': 'default_db',
    'user': 'gen_user',
    'password': '|dls1z:N7#v>vr',
    'sslmode': 'disable'
}

def create_user_table():
    """–°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã user —Å –∞–¥–º–∏–Ω–æ–º"""
    print("üîß –°–û–ó–î–ê–ù–ò–ï –¢–ê–ë–õ–ò–¶–´ USER –° –ê–î–ú–ò–ù–û–ú")
    print("=" * 80)
    
    try:
        conn = psycopg2.connect(**SERVER_DB_CONFIG)
        conn.autocommit = True
        cursor = conn.cursor()
        
        # –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É user
        print("\nüìã –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã user...")
        cursor.execute("""
            CREATE TABLE IF NOT EXISTS "user" (
                id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
                email VARCHAR(255) UNIQUE NOT NULL,
                username VARCHAR(255) UNIQUE NOT NULL,
                hashed_password VARCHAR(255) NOT NULL,
                is_active BOOLEAN DEFAULT TRUE,
                is_superuser BOOLEAN DEFAULT FALSE,
                created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
                updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP
            )
        """)
        print("  ‚úÖ –¢–∞–±–ª–∏—Ü–∞ user —Å–æ–∑–¥–∞–Ω–∞")
        
        # –°–æ–∑–¥–∞–µ–º –∞–¥–º–∏–Ω–∞
        print("\nüîß –°–æ–∑–¥–∞–Ω–∏–µ –∞–¥–º–∏–Ω–∞...")
        
        # –•–µ—à–∏—Ä—É–µ–º –ø–∞—Ä–æ–ª—å
        password = "admin123"
        hashed_password = bcrypt.hashpw(password.encode('utf-8'), bcrypt.gensalt()).decode('utf-8')
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –∞–¥–º–∏–Ω
        cursor.execute('SELECT COUNT(*) FROM "user" WHERE email = %s', ("admin@questcity.com",))
        admin_exists = cursor.fetchone()[0] > 0
        
        if admin_exists:
            # –û–±–Ω–æ–≤–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –∞–¥–º–∏–Ω–∞
            cursor.execute('''
                UPDATE "user" 
                SET username = %s, hashed_password = %s, is_superuser = TRUE, is_active = TRUE
                WHERE email = %s
            ''', ("admin", hashed_password, "admin@questcity.com"))
            print("  ‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –∞–¥–º–∏–Ω")
        else:
            # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–≥–æ –∞–¥–º–∏–Ω–∞
            cursor.execute('''
                INSERT INTO "user" (email, username, hashed_password, is_superuser, is_active)
                VALUES (%s, %s, %s, %s, %s)
            ''', ("admin@questcity.com", "admin", hashed_password, True, True))
            print("  ‚úÖ –°–æ–∑–¥–∞–Ω –Ω–æ–≤—ã–π –∞–¥–º–∏–Ω")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        cursor.execute('SELECT id, email, username, is_superuser, is_active FROM "user" WHERE email = %s', ("admin@questcity.com",))
        admin = cursor.fetchone()
        if admin:
            print(f"  üìã –ê–¥–º–∏–Ω: ID={admin[0]}, Email={admin[1]}, Username={admin[2]}, Superuser={admin[3]}, Active={admin[4]}")
        
        cursor.close()
        conn.close()
        print("\n‚úÖ –¢–∞–±–ª–∏—Ü–∞ user —Å–æ–∑–¥–∞–Ω–∞ –∏ –∞–¥–º–∏–Ω –Ω–∞—Å—Ç—Ä–æ–µ–Ω!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    create_user_table()
