#!/usr/bin/env python3
"""
–§–∏–Ω–∞–ª—å–Ω–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤—Å–µ—Ö –ø—Ä–æ–±–ª–µ–º –≤ —Å–µ—Ä–≤–µ—Ä–Ω–æ–π –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
"""
import psycopg2
import json
from typing import Dict, List, Any

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–µ—Ä–≤–µ—Ä–Ω–æ–π –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
SERVER_DB_CONFIG = {
    'host': '7da2c0adf39345ca39269f40.twc1.net',
    'port': 5432,
    'database': 'default_db',
    'user': 'gen_user',
    'password': '|dls1z:N7#v>vr',
    'sslmode': 'disable'
}

def get_connection():
    """–°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–µ—Ä–≤–µ—Ä–Ω–æ–π –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"""
    try:
        conn = psycopg2.connect(**SERVER_DB_CONFIG)
        conn.autocommit = True
        return conn
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î: {e}")
        return None

def get_table_structure(conn, table_name: str) -> List[str]:
    """–ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ç–∞–±–ª–∏—Ü—ã"""
    try:
        cursor = conn.cursor()
        cursor.execute("""
            SELECT column_name FROM information_schema.columns 
            WHERE table_name = %s 
            ORDER BY ordinal_position
        """, (table_name,))
        columns = [row[0] for row in cursor.fetchall()]
        cursor.close()
        return columns
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ç–∞–±–ª–∏—Ü—ã {table_name}: {e}")
        return []

def fix_all_issues():
    """–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤—Å–µ—Ö –ø—Ä–æ–±–ª–µ–º –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"""
    print("üîß –§–ò–ù–ê–õ–¨–ù–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –í–°–ï–• –ü–†–û–ë–õ–ï–ú –í –ë–ê–ó–ï –î–ê–ù–ù–´–•")
    print("=" * 80)
    
    conn = get_connection()
    if not conn:
        return
    
    try:
        cursor = conn.cursor()
        
        # 1. –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã point - –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏—Ö –∫–æ–ª–æ–Ω–æ–∫
        print("\nüîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã point...")
        try:
            cursor.execute("""
                ALTER TABLE point 
                ADD COLUMN IF NOT EXISTS type_photo CHARACTER VARYING,
                ADD COLUMN IF NOT EXISTS type_code INTEGER,
                ADD COLUMN IF NOT EXISTS type_word CHARACTER VARYING,
                ADD COLUMN IF NOT EXISTS file CHARACTER VARYING
            """)
            print("  ‚úÖ –ö–æ–ª–æ–Ω–∫–∏ –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ —Ç–∞–±–ª–∏—Ü—É point")
        except Exception as e:
            print(f"  ‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–æ–ª–æ–Ω–æ–∫ –≤ point: {e}")
        
        # 2. –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã review - –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –∫–æ–ª–æ–Ω–æ–∫
        print("\nüîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã review...")
        try:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –∫–æ–ª–æ–Ω–æ–∫
            cursor.execute("""
                SELECT column_name FROM information_schema.columns 
                WHERE table_name = 'review' AND column_name IN ('text', 'user_id', 'review', 'owner_id')
            """)
            existing_columns = [row[0] for row in cursor.fetchall()]
            
            if 'text' in existing_columns and 'review' not in existing_columns:
                cursor.execute("ALTER TABLE review RENAME COLUMN text TO review")
                print("  ‚úÖ –ö–æ–ª–æ–Ω–∫–∞ text –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∞ –≤ review")
            
            if 'user_id' in existing_columns and 'owner_id' not in existing_columns:
                cursor.execute("ALTER TABLE review RENAME COLUMN user_id TO owner_id")
                print("  ‚úÖ –ö–æ–ª–æ–Ω–∫–∞ user_id –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∞ –≤ owner_id")
            
            # –ò–∑–º–µ–Ω—è–µ–º —Ç–∏–ø –∫–æ–ª–æ–Ω–∫–∏ review –Ω–∞ text
            cursor.execute("ALTER TABLE review ALTER COLUMN review TYPE TEXT")
            print("  ‚úÖ –¢–∏–ø –∫–æ–ª–æ–Ω–∫–∏ review –∏–∑–º–µ–Ω–µ–Ω –Ω–∞ TEXT")
            
            # –î–ª—è owner_id —Å–Ω–∞—á–∞–ª–∞ —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –∫–æ–ª–æ–Ω–∫—É, –∫–æ–ø–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ, —É–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—É—é
            cursor.execute("ALTER TABLE review ADD COLUMN IF NOT EXISTS owner_id_new INTEGER")
            cursor.execute("UPDATE review SET owner_id_new = 1 WHERE owner_id_new IS NULL")
            cursor.execute("ALTER TABLE review DROP COLUMN IF EXISTS owner_id")
            cursor.execute("ALTER TABLE review RENAME COLUMN owner_id_new TO owner_id")
            print("  ‚úÖ –ö–æ–ª–æ–Ω–∫–∞ owner_id –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∞")
            
        except Exception as e:
            print(f"  ‚ùå –û—à–∏–±–∫–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è review: {e}")
        
        # 3. –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã quest - –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Ç–∏–ø–æ–≤ –¥–∞–Ω–Ω—ã—Ö
        print("\nüîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã quest...")
        try:
            # –ò–∑–º–µ–Ω—è–µ–º —Ç–∏–ø description –Ω–∞ text
            cursor.execute("ALTER TABLE quest ALTER COLUMN description TYPE TEXT")
            print("  ‚úÖ –¢–∏–ø –∫–æ–ª–æ–Ω–∫–∏ description –∏–∑–º–µ–Ω–µ–Ω –Ω–∞ TEXT")
            
            # –°–æ–∑–¥–∞–µ–º enum —Ç–∏–ø –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
            cursor.execute("""
                DO $$ 
                BEGIN
                    IF NOT EXISTS (SELECT 1 FROM pg_type WHERE typname = 'grouptype') THEN
                        CREATE TYPE grouptype AS ENUM ('ONE', 'TWO', 'THREE', 'FOUR');
                    END IF;
                END $$;
            """)
            
            # –ò–∑–º–µ–Ω—è–µ–º —Ç–∏–ø –∫–æ–ª–æ–Ω–∫–∏ group –Ω–∞ enum (–∏—Å–ø–æ–ª—å–∑—É–µ–º –∫–∞–≤—ã—á–∫–∏ –¥–ª—è –∑–∞—Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Å–ª–æ–≤–∞)
            cursor.execute('ALTER TABLE quest ALTER COLUMN "group" TYPE grouptype USING "group"::grouptype')
            print("  ‚úÖ –¢–∏–ø –∫–æ–ª–æ–Ω–∫–∏ group –∏–∑–º–µ–Ω–µ–Ω –Ω–∞ enum")
            
            # –î–µ–ª–∞–µ–º group nullable
            cursor.execute('ALTER TABLE quest ALTER COLUMN "group" DROP NOT NULL')
            print("  ‚úÖ –ö–æ–ª–æ–Ω–∫–∞ group —Å–¥–µ–ª–∞–Ω–∞ nullable")
            
        except Exception as e:
            print(f"  ‚ùå –û—à–∏–±–∫–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è quest: {e}")
        
        # 4. –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã merch - –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Ç–∏–ø–∞ description
        print("\nüîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã merch...")
        try:
            cursor.execute("ALTER TABLE merch ALTER COLUMN description TYPE TEXT")
            print("  ‚úÖ –¢–∏–ø –∫–æ–ª–æ–Ω–∫–∏ description –∏–∑–º–µ–Ω–µ–Ω –Ω–∞ TEXT")
        except Exception as e:
            print(f"  ‚ùå –û—à–∏–±–∫–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è merch: {e}")
        
        # 5. –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –∑–æ–Ω –≤ timestamp –∫–æ–ª–æ–Ω–∫–∞—Ö
        print("\nüîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –∑–æ–Ω...")
        tables_with_timestamps = ['category', 'quest', 'review']
        for table in tables_with_timestamps:
            try:
                cursor.execute(f"ALTER TABLE {table} ALTER COLUMN created_at TYPE TIMESTAMP WITH TIME ZONE")
                cursor.execute(f"ALTER TABLE {table} ALTER COLUMN updated_at TYPE TIMESTAMP WITH TIME ZONE")
                print(f"  ‚úÖ –í—Ä–µ–º–µ–Ω–Ω—ã–µ –∑–æ–Ω—ã –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã –≤ —Ç–∞–±–ª–∏—Ü–µ {table}")
            except Exception as e:
                print(f"  ‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∏—Å–ø—Ä–∞–≤–∏—Ç—å –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –∑–æ–Ω—ã –≤ {table}: {e}")
        
        # 6. –£–¥–∞–ª–µ–Ω–∏–µ –ª–∏—à–Ω–∏—Ö –∫–æ–ª–æ–Ω–æ–∫ created_at –∏ updated_at –∏–∑ point
        print("\nüîß –£–¥–∞–ª–µ–Ω–∏–µ –ª–∏—à–Ω–∏—Ö –∫–æ–ª–æ–Ω–æ–∫ –∏–∑ point...")
        try:
            cursor.execute("ALTER TABLE point DROP COLUMN IF EXISTS created_at")
            cursor.execute("ALTER TABLE point DROP COLUMN IF EXISTS updated_at")
            print("  ‚úÖ –õ–∏—à–Ω–∏–µ –∫–æ–ª–æ–Ω–∫–∏ —É–¥–∞–ª–µ–Ω—ã –∏–∑ point")
        except Exception as e:
            print(f"  ‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –∫–æ–ª–æ–Ω–æ–∫ –∏–∑ point: {e}")
        
        # 7. –£–¥–∞–ª–µ–Ω–∏–µ –ª–∏—à–Ω–∏—Ö –∫–æ–ª–æ–Ω–æ–∫ created_at –∏ updated_at –∏–∑ tool
        print("\nüîß –£–¥–∞–ª–µ–Ω–∏–µ –ª–∏—à–Ω–∏—Ö –∫–æ–ª–æ–Ω–æ–∫ –∏–∑ tool...")
        try:
            cursor.execute("ALTER TABLE tool DROP COLUMN IF EXISTS created_at")
            cursor.execute("ALTER TABLE tool DROP COLUMN IF EXISTS updated_at")
            print("  ‚úÖ –õ–∏—à–Ω–∏–µ –∫–æ–ª–æ–Ω–∫–∏ —É–¥–∞–ª–µ–Ω—ã –∏–∑ tool")
        except Exception as e:
            print(f"  ‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –∫–æ–ª–æ–Ω–æ–∫ –∏–∑ tool: {e}")
        
        # 8. –£–¥–∞–ª–µ–Ω–∏–µ –ª–∏—à–Ω–µ–π –∫–æ–ª–æ–Ω–∫–∏ avatar_url –∏–∑ profile
        print("\nüîß –£–¥–∞–ª–µ–Ω–∏–µ –ª–∏—à–Ω–µ–π –∫–æ–ª–æ–Ω–∫–∏ –∏–∑ profile...")
        try:
            cursor.execute("ALTER TABLE profile DROP COLUMN IF EXISTS avatar_url")
            print("  ‚úÖ –õ–∏—à–Ω—è—è –∫–æ–ª–æ–Ω–∫–∞ —É–¥–∞–ª–µ–Ω–∞ –∏–∑ profile")
        except Exception as e:
            print(f"  ‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –∫–æ–ª–æ–Ω–∫–∏ –∏–∑ profile: {e}")
        
        # 9. –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö —Å–ø—Ä–∞–≤–æ—á–Ω—ã—Ö —Ç–∞–±–ª–∏—Ü (—Å —É—á–µ—Ç–æ–º —Ä–µ–∞–ª—å–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã)
        print("\nüîß –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Å–ø—Ä–∞–≤–æ—á–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö...")
        
        # –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è activity (—Ç–æ–ª—å–∫–æ id –∏ name)
        try:
            cursor.execute("DELETE FROM activity")
            cursor.execute("""
                INSERT INTO activity (id, name) VALUES
                (1, '–ü–µ—à–∫–æ–º'),
                (2, '–ù–∞ –≤–µ–ª–æ—Å–∏–ø–µ–¥–µ'),
                (3, '–ù–∞ –º–∞—à–∏–Ω–µ'),
                (4, '–ù–∞ –æ–±—â–µ—Å—Ç–≤–µ–Ω–Ω–æ–º —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–µ'),
                (5, '–ù–∞ —Å–∞–º–æ–∫–∞—Ç–µ'),
                (6, '–ù–∞ —Ä–æ–ª–∏–∫–∞—Ö'),
                (7, '–ù–∞ –ª—ã–∂–∞—Ö'),
                (8, '–ù–∞ –∫–æ–Ω—å–∫–∞—Ö'),
                (9, '–ù–∞ –ª–æ–¥–∫–µ'),
                (10, '–ù–∞ –º–æ—Ç–æ—Ü–∏–∫–ª–µ')
            """)
            print("  ‚úÖ –î–∞–Ω–Ω—ã–µ activity —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω—ã")
        except Exception as e:
            print(f"  ‚ùå –û—à–∏–±–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ activity: {e}")
        
        # –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è category (—Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π primary key)
        try:
            cursor.execute("DELETE FROM category")
            cursor.execute("""
                INSERT INTO category (id, name, image) VALUES
                (1, '–ü—Ä–∏–∫–ª—é—á–µ–Ω–∏—è', 'adventure.jpg'),
                (2, '–î–µ—Ç–µ–∫—Ç–∏–≤—ã', 'detective.jpg'),
                (3, '–ò—Å—Ç–æ—Ä–∏—è', 'history.jpg'),
                (4, '–ù–∞—É–∫–∞', 'science.jpg'),
                (5, '–ò—Å–∫—É—Å—Å—Ç–≤–æ', 'art.jpg'),
                (6, '–°–ø–æ—Ä—Ç', 'sport.jpg'),
                (7, '–ö—É–ª–∏–Ω–∞—Ä–∏—è', 'cooking.jpg'),
                (8, '–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏', 'technology.jpg')
            """)
            print("  ‚úÖ –î–∞–Ω–Ω—ã–µ category —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω—ã")
        except Exception as e:
            print(f"  ‚ùå –û—à–∏–±–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ category: {e}")
        
        # –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è place (—Ç–æ–ª—å–∫–æ id –∏ name)
        try:
            cursor.execute("DELETE FROM place")
            cursor.execute("""
                INSERT INTO place (id, name) VALUES
                (1, '–ü–∞—Ä–∫'),
                (2, '–ú—É–∑–µ–π'),
                (3, '–ë–∏–±–ª–∏–æ—Ç–µ–∫–∞'),
                (4, '–ö–∞—Ñ–µ'),
                (5, '–¢–µ–∞—Ç—Ä'),
                (6, '–°—Ç–∞–¥–∏–æ–Ω'),
                (7, '–¢–æ—Ä–≥–æ–≤—ã–π —Ü–µ–Ω—Ç—Ä'),
                (8, '–£–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç'),
                (9, '–ë–æ–ª—å–Ω–∏—Ü–∞'),
                (10, '–ü–æ–ª–∏—Ü–∏—è')
            """)
            print("  ‚úÖ –î–∞–Ω–Ω—ã–µ place —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω—ã")
        except Exception as e:
            print(f"  ‚ùå –û—à–∏–±–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ place: {e}")
        
        # –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è vehicle (—Ç–æ–ª—å–∫–æ id –∏ name)
        try:
            cursor.execute("DELETE FROM vehicle")
            cursor.execute("""
                INSERT INTO vehicle (id, name) VALUES
                (1, '–ü–µ—à–∫–æ–º'),
                (2, '–í–µ–ª–æ—Å–∏–ø–µ–¥'),
                (3, '–ê–≤—Ç–æ–º–æ–±–∏–ª—å'),
                (4, '–û–±—â–µ—Å—Ç–≤–µ–Ω–Ω—ã–π —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç'),
                (5, '–°–∞–º–æ–∫–∞—Ç'),
                (6, '–†–æ–ª–∏–∫–∏')
            """)
            print("  ‚úÖ –î–∞–Ω–Ω—ã–µ vehicle —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω—ã")
        except Exception as e:
            print(f"  ‚ùå –û—à–∏–±–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ vehicle: {e}")
        
        # –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è tool (id, name, image)
        try:
            cursor.execute("DELETE FROM tool")
            cursor.execute("""
                INSERT INTO tool (id, name, image) VALUES
                (1, '–ö–æ–º–ø–∞—Å', 'compass.jpg'),
                (2, '–ö–∞—Ä—Ç–∞', 'map.jpg'),
                (3, '–§–æ–Ω–∞—Ä–∏–∫', 'flashlight.jpg'),
                (4, '–ë–∏–Ω–æ–∫–ª—å', 'binoculars.jpg'),
                (5, '–ö–∞–º–µ—Ä–∞', 'camera.jpg'),
                (6, '–¢–µ–ª–µ—Ñ–æ–Ω', 'phone.jpg'),
                (7, '–ß–∞—Å—ã', 'watch.jpg'),
                (8, '–†—é–∫–∑–∞–∫', 'backpack.jpg'),
                (9, '–í–æ–¥–∞', 'water.jpg'),
                (10, '–ï–¥–∞', 'food.jpg')
            """)
            print("  ‚úÖ –î–∞–Ω–Ω—ã–µ tool —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω—ã")
        except Exception as e:
            print(f"  ‚ùå –û—à–∏–±–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ tool: {e}")
        
        # 10. –û—á–∏—Å—Ç–∫–∞ —Ç–∞–±–ª–∏—Ü—ã quest (—É–¥–∞–ª—è–µ–º –≤—Å–µ –∫–≤–µ—Å—Ç—ã)
        print("\nüîß –û—á–∏—Å—Ç–∫–∞ —Ç–∞–±–ª–∏—Ü—ã quest...")
        try:
            cursor.execute("DELETE FROM quest")
            print("  ‚úÖ –¢–∞–±–ª–∏—Ü–∞ quest –æ—á–∏—â–µ–Ω–∞")
        except Exception as e:
            print(f"  ‚ùå –û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ quest: {e}")
        
        cursor.close()
        print("\n‚úÖ –í—Å–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω—ã!")
        
    except Exception as e:
        print(f"‚ùå –û–±—â–∞—è –æ—à–∏–±–∫–∞: {e}")
    finally:
        conn.close()

if __name__ == "__main__":
    fix_all_issues()
